%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 17 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 669.0236 115.7029 681.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 651.0236 128.4829 663.0236 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://pypi.org/project/tabulate/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 633.0236 121.2729 645.0236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.scipy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 615.0236 108.4729 627.0236 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R ] /Contents 103 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
10 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.reader)
>> /Border [ 0 0 0 ] /Rect [ 369.1229 516.0236 398.0229 528.0236 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://jieter.github.io/orc-data/site/)
>> /Border [ 0 0 0 ] /Rect [ 228.3029 468.0236 250.5229 480.0236 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://opencpn.org/OpenCPN/plugins/polar.html)
>> /Border [ 0 0 0 ] /Rect [ 279.5329 456.0236 381.7929 468.0236 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/pickle.html#pickle.load)
>> /Border [ 0 0 0 ] /Rect [ 379.9129 222.0236 398.8129 234.0236 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Annots [ 10 0 R 11 0 R 12 0 R 13 0 R ] /Contents 104 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
15 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/pickle.html#pickle.dump)
>> /Border [ 0 0 0 ] /Rect [ 371.2228 364.8661 396.2328 376.8661 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Annots [ 15 0 R ] /Contents 105 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
17 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
18 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.writer)
>> /Border [ 0 0 0 ] /Rect [ 161.5929 100.8661 186.0329 112.8661 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Annots [ 18 0 R ] /Contents 106 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
20 0 obj
<<
/Contents 107 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
21 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 732.0236 455.3429 744.0236 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 328.0629 624.0236 344.1829 636.0236 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 465.0236 455.3429 477.0236 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 328.0629 357.0236 344.1829 369.0236 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 168.0236 455.3429 180.0236 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Annots [ 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R ] /Contents 108 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
27 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 691.8661 409.1929 703.8661 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 691.8661 458.1029 703.8661 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 559.8661 470.9129 571.8661 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 376.8661 455.3429 388.8661 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 238.8661 409.1929 250.8661 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 238.8661 458.1029 250.8661 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 94.86614 470.9129 106.8661 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Annots [ 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R ] /Contents 109 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
35 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 637.8661 455.3429 649.8661 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 571.8661 409.1929 583.8661 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 571.8661 458.1029 583.8661 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 505.8661 409.1929 517.8661 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 505.8661 458.1029 517.8661 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers)
>> /Border [ 0 0 0 ] /Rect [ 302.7329 451.8661 333.8429 463.8661 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 274.8661 455.3429 286.8661 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.ConvexHull.html)
>> /Border [ 0 0 0 ] /Rect [ 340.7429 190.8661 391.8629 202.8661 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 202.1729 166.8661 218.2929 178.8661 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Annots [ 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R ] /Contents 110 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
45 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.writer)
>> /Border [ 0 0 0 ] /Rect [ 273.5129 387.0236 297.9529 399.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 132.0236 455.3429 144.0236 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Annots [ 45 0 R 46 0 R ] /Contents 111 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
48 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 328.0629 702.0236 344.1829 714.0236 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 537.0236 455.3429 549.0236 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 328.0629 429.0236 344.1829 441.0236 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 238.8661 455.3429 250.8661 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 100.8661 409.1929 112.8661 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 100.8661 458.1029 112.8661 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/Annots [ 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R ] /Contents 112 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
55 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 666.0236 470.9129 678.0236 ] /Subtype /Link /Type /Annot
>>
endobj
56 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 483.0236 455.3429 495.0236 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 345.0236 409.1929 357.0236 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 345.0236 458.1029 357.0236 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 213.0236 470.9129 225.0236 ] /Subtype /Link /Type /Annot
>>
endobj
60 0 obj
<<
/Annots [ 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R ] /Contents 113 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
61 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 727.8661 455.3429 739.8661 ] /Subtype /Link /Type /Annot
>>
endobj
62 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 661.8661 409.1929 673.8661 ] /Subtype /Link /Type /Annot
>>
endobj
63 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 661.8661 458.1029 673.8661 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 595.8661 409.1929 607.8661 ] /Subtype /Link /Type /Annot
>>
endobj
65 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 595.8661 458.1029 607.8661 ] /Subtype /Link /Type /Annot
>>
endobj
66 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers)
>> /Border [ 0 0 0 ] /Rect [ 302.7329 541.8661 333.8429 553.8661 ] /Subtype /Link /Type /Annot
>>
endobj
67 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 364.8661 455.3429 376.8661 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.ConvexHull.html)
>> /Border [ 0 0 0 ] /Rect [ 340.7429 280.8661 391.8629 292.8661 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 202.1729 256.8661 218.2929 268.8661 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/Annots [ 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R ] /Contents 114 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
71 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.writer)
>> /Border [ 0 0 0 ] /Rect [ 273.5129 474.0236 297.9529 486.0236 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/Annots [ 71 0 R ] /Contents 115 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
73 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 666.0236 455.3429 678.0236 ] /Subtype /Link /Type /Annot
>>
endobj
74 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 423.0236 455.3429 435.0236 ] /Subtype /Link /Type /Annot
>>
endobj
75 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 328.0629 315.0236 344.1829 327.0236 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 126.0236 455.3429 138.0236 ] /Subtype /Link /Type /Annot
>>
endobj
77 0 obj
<<
/Annots [ 73 0 R 74 0 R 75 0 R 76 0 R ] /Contents 116 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
78 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 637.8661 409.1929 649.8661 ] /Subtype /Link /Type /Annot
>>
endobj
79 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 637.8661 458.1029 649.8661 ] /Subtype /Link /Type /Annot
>>
endobj
80 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 505.8661 470.9129 517.8661 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 322.8661 455.3429 334.8661 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 184.8661 409.1929 196.8661 ] /Subtype /Link /Type /Annot
>>
endobj
83 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 184.8661 458.1029 196.8661 ] /Subtype /Link /Type /Annot
>>
endobj
84 0 obj
<<
/Annots [ 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R ] /Contents 117 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
85 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 741.0236 470.9129 753.0236 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 612.0236 455.3429 624.0236 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 546.0236 409.1929 558.0236 ] /Subtype /Link /Type /Annot
>>
endobj
88 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 546.0236 458.1029 558.0236 ] /Subtype /Link /Type /Annot
>>
endobj
89 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 480.0236 409.1929 492.0236 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 480.0236 458.1029 492.0236 ] /Subtype /Link /Type /Annot
>>
endobj
91 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers)
>> /Border [ 0 0 0 ] /Rect [ 302.7329 426.0236 333.8429 438.0236 ] /Subtype /Link /Type /Annot
>>
endobj
92 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 249.0236 455.3429 261.0236 ] /Subtype /Link /Type /Annot
>>
endobj
93 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.ConvexHull.html)
>> /Border [ 0 0 0 ] /Rect [ 340.7429 165.0236 391.8629 177.0236 ] /Subtype /Link /Type /Annot
>>
endobj
94 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 202.1729 141.0236 218.2929 153.0236 ] /Subtype /Link /Type /Annot
>>
endobj
95 0 obj
<<
/Annots [ 85 0 R 86 0 R 87 0 R 88 0 R 89 0 R 90 0 R 91 0 R 92 0 R 93 0 R 94 0 R ] /Contents 118 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 102 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
96 0 obj
<<
/Outlines 98 0 R /PageLabels 119 0 R /PageMode /UseNone /Pages 102 0 R /Type /Catalog
>>
endobj
97 0 obj
<<
/Author () /CreationDate (D:20210420141634-01'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20210420141634-01'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (hrosailing-Module Documentation) /Trapped /False
>>
endobj
98 0 obj
<<
/Count 3 /First 99 0 R /Last 101 0 R /Type /Outlines
>>
endobj
99 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 729.0236 0 ] /Next 100 0 R /Parent 98 0 R /Title (Dependencies)
>>
endobj
100 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 606.0236 0 ] /Next 101 0 R /Parent 98 0 R /Prev 99 0 R /Title (How To Use This Module)
>>
endobj
101 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 474.6236 0 ] /Parent 98 0 R /Prev 100 0 R /Title (Contents Of This Module)
>>
endobj
102 0 obj
<<
/Count 16 /Kids [ 9 0 R 14 0 R 16 0 R 19 0 R 20 0 R 26 0 R 34 0 R 44 0 R 47 0 R 54 0 R 
  60 0 R 70 0 R 72 0 R 77 0 R 84 0 R 95 0 R ] /Type /Pages
>>
endobj
103 0 obj
<<
/Length 5557
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 61.05488 0 Td 24 TL /F2 20 Tf 0 0 0 rg (hrosailing) Tj /F3 20 Tf (-Module Documentation) Tj T* -61.05488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module has the following third-party dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 672.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (numpy) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 666.0236 cm
Q
q
1 0 0 1 62.69291 654.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (matplotlib) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
Q
q
1 0 0 1 62.69291 636.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (tabulate) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 630.0236 cm
Q
q
1 0 0 1 62.69291 618.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (scipy) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
Q
q
1 0 0 1 62.69291 585.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (How To Use This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 567.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (After installing/downloading one can easily use the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module via) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 62.69291 535.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( import hrosailing) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 535.8236 cm
Q
q
1 0 0 1 62.69291 517.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 511.8236 cm
Q
q
1 0 0 1 62.69291 486.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( from hrosailing import something) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 486.6236 cm
Q
q
1 0 0 1 62.69291 453.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Contents Of This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 435.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module defines the following functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 429.6236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 141 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 135 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 56 Tm  T* ET
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv-file is located or where a new .csv-file will be created) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be written to the .csv-file) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the .) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (-function of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (from_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (fmt='hro',) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
104 0 obj
<<
/Length 9080
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 198.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 206 Tm  T* ET
q
1 0 0 1 20 204 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file which you want to be read) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (fmt) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file. Currently supported formats are:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('hro') Tj /F1 10 Tf (, ) Tj /F2 10 Tf ('orc') Tj /F1 10 Tf (, ) Tj /F2 10 Tf ('opencpn') Tj /F1 10 Tf (, ) Tj /F2 10 Tf ('array') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the occuring wind speeds are true wind.) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will be passed to the constructor of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instance) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the occuring wind angles are true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will be passed to the constructor of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instance) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates an ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance from the data that) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (is written in the given .csv file via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (reader) Tj /F1 10 Tf (-class, see ) Tj 0 0 .501961 rg (reader) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The .csv file needs to adhere to the format specified by the parameter ) Tj /F2 10 Tf (fmt) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('hro') Tj /F1 10 Tf (: The format created by the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('orc') Tj /F1 10 Tf (: The format found at ) Tj 0 0 .501961 rg (ORC) Tj 0 0 0 rg ( \(without beat and run angles\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('opencpn') Tj /F1 10 Tf (: The format created by the ) Tj 0 0 .501961 rg (OpenCPN Polar Plugin) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('array') Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 123 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 87 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 56 Tm  T* ET
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .pkl file or where the created .pkl file will be located) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be written to the .pkl file) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the .) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (-function of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 123 cm
Q
q
1 0 0 1 20 105 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (depickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 99 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .pkl file which is to be read) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates an ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance from the data that is) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (written in the given .pkl file, via the ) Tj /F2 10 Tf (pickle) Tj /F1 10 Tf (.) Tj /F3 10 Tf (load) Tj /F1 10 Tf (-function, see ) Tj 0 0 .501961 rg (load) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (convert) Tj /F1 10 Tf (\() Tj /F2 10 Tf (obj,) Tj ( ) Tj (convert_type) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 56 Tm  T* ET
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An instance of a subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (convert_type) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Converts ) Tj /F2 10 Tf (obj) Tj /F1 10 Tf ( to an instance of ) Tj /F2 10 Tf (convert_type) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Currently only works with the subclasses ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
105 0 obj
<<
/Length 9125
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 558.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 195 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 195 cm
Q
q
1 0 0 1 20 177 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetric_polar_diagram) Tj /F1 10 Tf (\(obj\)) Tj T* ET
Q
Q
q
1 0 0 1 20 171 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An instance of a subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Symmetrizes a given instance of a subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (I.E. for every tuple of \(wind speed, wind angle, boat speed\) that is contained in ) Tj /F2 10 Tf (obj) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in some form, the function creates a new instance of the same subclass of) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (, such that the tuples \(wind speed, wind angle, boat speed\)) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and \(wind speed, 360 - wind angle, boat speed\) are containted within it in some form.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Currently only works for the subclasses ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( and) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Should only be used for instances of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( if the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed resolution ranges from 0 to 180 or 180 to 360 to avoid conflicting data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 558.0236 cm
Q
q
1 0 0 1 62.69291 540.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module defines the following public classes:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 534.0236 cm
Q
q
1 0 0 1 44.0128 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 423 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 417 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 309 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An abstract base class for most classes in the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module) Tj T* ET
Q
Q
q
1 0 0 1 20 291 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 285 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 81 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 75 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .pkl file or where the created .pkl file will be located) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates or overwrites a .pkl file, with the class data of the instance which) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (called the function, via the ) Tj /F2 10 Tf (pickle) Tj /F1 10 Tf (.) Tj /F3 10 Tf (dump) Tj /F1 10 Tf (-function, see ) Tj 0 0 .501961 rg (dump) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( class also defines the following abstract methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 14 Tm 5.895 Tw 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ax=None,) Tj ( ) Tj (min_color='green',) Tj ( ) Tj (max_color='red',) Tj /F1 10 Tf  T* 0 Tw /F2 10 Tf (marker=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_resolution=None,) Tj ( ) Tj (wind_angle_resoluti) Tj (on=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (data=None,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar performance diagram in form of a table.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 26 Tm 1.212823 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (wind_speed_resolution) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (wind_angle_resolution) Tj /F1 10 Tf (\) can either be) Tj T* 0 Tw 2.888443 Tw /F2 10 Tf (Iterable) Tj /F1 10 Tf ( \(of ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( and/or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( values\), ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( and determines the number of) Tj T* 0 Tw (columns \(resp. rows\) the Table will have.) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
106 0 obj
<<
/Length 8354
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 634.1575 cm
q
BT 1 0 0 1 0 50 Tm -0.027235 Tw 12 TL /F1 10 Tf 0 0 0 rg (If an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( is passed, the number of columns \(resp. rows\) will be the same as the number of) Tj T* 0 Tw .859985 Tw (elements in the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, if an ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( is passed, the number of columns \(resp. rows\)) Tj T* 0 Tw 8.45872 Tw (will be the number of elements of numpy.arange\() Tj /F2 10 Tf (wind_speed_resolution) Tj /F1 10 Tf (, 40,) Tj T* 0 Tw 17.05659 Tw /F2 10 Tf (wind_speed_resolution) Tj /F1 10 Tf (\) \(resp. numpy.arange\() Tj /F2 10 Tf (wind_angle_resolution) Tj /F1 10 Tf (, 360,) Tj T* 0 Tw /F2 10 Tf (wind_angle_resolution) Tj /F1 10 Tf (\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 604.1575 cm
q
BT 1 0 0 1 0 14 Tm 1.549974 Tw 12 TL /F1 10 Tf 0 0 0 rg (If no custom ) Tj /F2 10 Tf (wind_speed_resolution) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (wind_angle_resolution) Tj /F1 10 Tf (\) is passed, it will) Tj T* 0 Tw (default to numpy.arange\(2,42,2\) \(resp. numpy.arange\(0, 360, 5\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 562.1575 cm
q
BT 1 0 0 1 0 26 Tm 4.744983 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) is a ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf ( that specifies wether the wind speeds in) Tj T* 0 Tw 2.041085 Tw /F2 10 Tf (wind_speed_resolution) Tj /F1 10 Tf ( \(resp. the wind angles in ) Tj /F2 10 Tf (wind_angle_resolution) Tj /F1 10 Tf (\) are to be) Tj T* 0 Tw (viewed as true wind.) Tj T* ET
Q
Q
q
1 0 0 1 20 532.1575 cm
q
BT 1 0 0 1 0 14 Tm .299987 Tw 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) is set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the wind speeds \(resp. wind angles\) will be converted into true) Tj T* 0 Tw (wind.) Tj T* ET
Q
Q
q
1 0 0 1 20 478.1575 cm
q
BT 1 0 0 1 0 38 Tm 1.576905 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (data) Tj /F1 10 Tf ( is a ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of matching shape that contains the boat speeds) Tj T* 0 Tw 1.884985 Tw (matching the wind speeds and angles in the resolution. If no custom ) Tj /F2 10 Tf (data) Tj /F1 10 Tf ( is passed, it will) Tj T* 0 Tw 1.948443 Tw (default to numpy.zeros\(\(rdim, cdim\)\) where rdim and cdim are number of rows and columns) Tj T* 0 Tw (respectively, determined by ) Tj /F2 10 Tf (wind_angle_resolution) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wind_speed_resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 460.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( class has the following \(private\) attriubutes:) Tj T* ET
Q
Q
q
1 0 0 1 20 454.1575 cm
Q
q
1 0 0 1 20 406.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_resolution_wind_speed) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_resolution_wind_angle) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_data) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 406.1575 cm
Q
q
1 0 0 1 20 388.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( class defines the following dunder methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 382.1575 cm
Q
q
1 0 0 1 20 247.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 123 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__str__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 105 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__repr__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 87 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__getitem__) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_tup) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 81 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_tup) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Tuple to specify the row and column entry of the table, given as) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements of the wind angle and wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns specified entry of the table) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 247.1575 cm
Q
q
1 0 0 1 20 229.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 223.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 225 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 219 cm
Q
q
1 0 0 1 20 207 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_resolution_wind_speed) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 207 cm
Q
q
1 0 0 1 20 189 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 183 cm
Q
q
1 0 0 1 20 171 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_resolution_wind_angle) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 171 cm
Q
q
1 0 0 1 20 153 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 147 cm
Q
q
1 0 0 1 20 135 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 135 cm
Q
q
1 0 0 1 20 117 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 111 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file or where the created .csv file will be located) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates or overwrites a .csv file with the class data of object) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (which called the function via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (writer) Tj /F1 10 Tf (-class,) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (see ) Tj 0 0 .501961 rg (writer) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file will be as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
107 0 obj
<<
/Length 8719
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 610.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind speed resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind angle resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Boat speeds:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with the delimiter being ','.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 610.1575 cm
Q
q
1 0 0 1 20 592.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (change_entries) Tj /F1 10 Tf (\() Tj /F2 10 Tf (new_data,) Tj ( ) Tj (wind_speeds=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 574.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_angles=None,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 568.1575 cm
Q
q
1 0 0 1 20 151.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 362 Tm  T* ET
q
1 0 0 1 20 360 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_data) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of matching shape) Tj T* ET
Q
Q
q
1 0 0 1 20 354 cm
Q
q
1 0 0 1 20 312 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New data that will be written in the specified entries) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If no ) Tj /F2 10 Tf (wind_speeds) Tj /F1 10 Tf ( and no ) Tj /F2 10 Tf (wind_angles) Tj /F1 10 Tf ( is passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the required shape is the shape of ) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 294 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speeds) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 288 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Column entries where the data is to be changed, given by elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (None) Tj /F1 10 Tf ( is passed, the function changes all entries in the rows) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (specified by ) Tj /F2 10 Tf (wind_angles) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (wind_angles) Tj /F1 10 Tf ( is also ) Tj /F2 10 Tf (None) Tj /F1 10 Tf (, the function changes all) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (entries in the table) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_angles) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Row entries where the data is to be changed, given by elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the wind angle resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (None) Tj /F1 10 Tf ( is passed, the function changes all entries in the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (columns specified by ) Tj /F2 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (wind_speeds) Tj /F1 10 Tf ( is also ) Tj /F2 10 Tf (None) Tj /F1 10 Tf (, the function changes all) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (entries in the table) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not wind_speeds is to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (wind_speeds) Tj /F1 10 Tf ( will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not wind_angles is to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (wind_angles) Tj /F1 10 Tf ( will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Changes the data in the specified entries in the table to the input new data.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This function alters ) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 151.1575 cm
Q
q
1 0 0 1 20 133.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 127.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 109.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 96.15748 Tm  T* ET
q
1 0 0 1 20 94.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 88.15748 cm
Q
q
1 0 0 1 20 64.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .189985 Tw (Slice of the polar diagram that is to be plotted, given as an element of the wind) Tj T* 0 Tw (speed resolution) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 64.15748 cm
Q
q
1 0 0 1 20 46.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 40.15748 cm
Q
q
1 0 0 1 20 10.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
108 0 obj
<<
/Length 9018
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 547.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 547.1575 cm
Q
q
1 0 0 1 20 529.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 523.1575 cm
Q
q
1 0 0 1 20 280.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 231 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 188 Tm  T* ET
q
1 0 0 1 20 186 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .189985 Tw (Slice of the polar diagram that is to be plotted, given as an element of the wind) Tj T* 0 Tw (speed resolution) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 280.1575 cm
Q
q
1 0 0 1 20 262.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (wind_speed_range=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 244.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 238.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 220.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 207.1575 Tm  T* ET
q
1 0 0 1 20 205.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 199.1575 cm
Q
q
1 0 0 1 20 169.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The range of wind speeds to be plotted, given as an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 169.1575 cm
Q
q
1 0 0 1 20 151.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 145.1575 cm
Q
q
1 0 0 1 20 91.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 91.15748 cm
Q
q
1 0 0 1 20 73.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 67.15748 cm
Q
q
1 0 0 1 20 1.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
109 0 obj
<<
/Length 8855
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 483 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 140 Tm  T* ET
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded polar plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 483 cm
Q
q
1 0 0 1 20 465 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (wind_speed_range=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 447 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 441 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 411 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 356 Tm  T* ET
q
1 0 0 1 20 354 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 318 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The range of wind speeds to be plotted, given as an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 318 cm
Q
q
1 0 0 1 20 300 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 294 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 222 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 14 Tm 9.888976 Tw 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded cartesian plot of multiple slices, given by) Tj T* 0 Tw /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ax=None,) Tj ( ) Tj (min_color='green',) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
110 0 obj
<<
/Length 8712
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 564 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (max_color='red',) Tj ( ) Tj (marker=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 558 cm
Q
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 260 Tm  T* ET
q
1 0 0 1 20 258 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 180 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (min_color) Tj /F1 10 Tf ( : See below for type ,optional) Tj T* ET
Q
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the first/lower color of the color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Input can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (max_color) Tj /F1 10 Tf ( : See below for type,optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the last/upper color of the color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Input can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyle) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the style of the markers in the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For all possible styles, see ) Tj 0 0 .501961 rg (marker) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 273 cm
Q
q
1 0 0 1 20 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 249 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 170 Tm  T* ET
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram that is to be plotted, given as an element) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram table, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.spatial) Tj /F1 10 Tf (.) Tj /F3 10 Tf (ConvexHull) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (ConvexHull) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then creates a polar plot of the convex hull, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf (\() Tj /F2 10 Tf (f,) Tj ( ) Tj (*params) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 1.581984 Tw (A class to represent, visualize and work with a polar performance diagram given as a fitted) Tj T* 0 Tw (curve with a list of optimal parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 26 Tm 2.545318 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (f) Tj /F1 10 Tf ( should be a function of the form ) Tj /F2 10 Tf (f\(x,) Tj ( ) Tj (*params\)) Tj /F1 10 Tf (, where ) Tj /F2 10 Tf (x) Tj /F1 10 Tf ( should be) Tj T* 0 Tw .703555 Tw /F2 10 Tf (array_like) Tj /F1 10 Tf ( with dimension 2 \(the rows should correspond to pairs of wind speeds and wind) Tj T* 0 Tw (angles\), and determines the curve which describes the polar diagram.) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
111 0 obj
<<
/Length 8747
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 670.1575 cm
q
BT 1 0 0 1 0 14 Tm .15284 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (*params) Tj /F1 10 Tf ( should contain the resulting parameters that are obtained via a fitting of) Tj T* 0 Tw /F2 10 Tf (f) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 652.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf ( class has the following \(private\) attributes:) Tj T* ET
Q
Q
q
1 0 0 1 20 646.1575 cm
Q
q
1 0 0 1 20 616.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_f) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_params) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 616.1575 cm
Q
q
1 0 0 1 20 598.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf ( class defines the following dunder methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 592.1575 cm
Q
q
1 0 0 1 20 481.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 99 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__repr__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 81 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__call__) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (wind_angle) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 75 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_angle) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm .632976 Tw 12 TL /F1 10 Tf 0 0 0 rg (Calls ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj /F1 10 Tf ( with the specified values. ) Tj /F2 10 Tf (wind_speed) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wind_angle) Tj /F1 10 Tf ( should be) Tj T* 0 Tw (of matching shape) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 481.1575 cm
Q
q
1 0 0 1 20 463.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 457.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 463.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj T* ET
Q
Q
q
1 0 0 1 20 457.1575 cm
Q
q
1 0 0 1 20 445.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_f) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 445.1575 cm
Q
q
1 0 0 1 20 427.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 421.1575 cm
Q
q
1 0 0 1 20 409.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_params) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 409.1575 cm
Q
q
1 0 0 1 20 391.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 385.1575 cm
Q
q
1 0 0 1 20 226.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file or where the created .csv file will be located) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 14 Tm .871318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Creates or overwrites a .csv file with the class data of object which called the function) Tj T* 0 Tw (via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (writer) Tj /F1 10 Tf (-class, see ) Tj 0 0 .501961 rg (writer) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file will be as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Function: self.curve) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Parameters: self.parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with the delimiter ':') Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 226.1575 cm
Q
q
1 0 0 1 20 208.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 202.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 184.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 171.1575 Tm  T* ET
q
1 0 0 1 20 169.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 163.1575 cm
Q
q
1 0 0 1 20 133.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 133.1575 cm
Q
q
1 0 0 1 20 115.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 109.1575 cm
Q
q
1 0 0 1 20 55.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 55.15748 cm
Q
q
1 0 0 1 20 37.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 31.15748 cm
Q
q
1 0 0 1 20 1.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
112 0 obj
<<
/Length 8926
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 625.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 625.1575 cm
Q
q
1 0 0 1 20 607.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 601.1575 cm
Q
q
1 0 0 1 20 352.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 352.1575 cm
Q
q
1 0 0 1 20 334.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range=\(0,20\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 316.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 310.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 291 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 278 Tm  T* ET
q
1 0 0 1 20 276 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 270 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 222 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
113 0 obj
<<
/Length 9077
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 589.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded polar plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, vie the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 589.1575 cm
Q
q
1 0 0 1 20 571.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range=\(0,20\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 553.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 547.1575 cm
Q
q
1 0 0 1 20 136.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 356 Tm  T* ET
q
1 0 0 1 20 354 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2 , optional) Tj T* ET
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 318 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 318 cm
Q
q
1 0 0 1 20 300 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 294 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 222 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded cartesian plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 136.1575 cm
Q
q
1 0 0 1 20 118.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range=\(0,20\),) Tj ( ) Tj (ax=Non) Tj (e,) Tj T* ET
Q
Q
q
1 0 0 1 20 100.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (min_color='green',) Tj ( ) Tj (max_color='red',) Tj ( ) Tj (marker=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 94.15748 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 62 Tm  T* ET
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optinal) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
114 0 obj
<<
/Length 9275
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 200 Tm  T* ET
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 180 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (min_color) Tj /F1 10 Tf ( : See below for type,optional) Tj T* ET
Q
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the first/lower color of the color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Input can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (max_color) Tj /F1 10 Tf ( : See below for type,optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the last/upper color of the color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Input can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyle) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the style of the markers in the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For all possible styles, see ) Tj 0 0 .501961 rg (marker) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 273 cm
Q
q
1 0 0 1 20 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 249 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 170 Tm  T* ET
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram table, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.spatial) Tj /F1 10 Tf (.) Tj /F3 10 Tf (ConvexHull) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (ConvexHull) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then creates a polar plot of the convex hull, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf (\() Tj /F2 10 Tf (points=None,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 144 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to present, visualize and work with a polar performance diagram in form of a point cloud.) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 26 Tm .432126 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (points) Tj /F1 10 Tf ( should be ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape \(_, 3\) and determines the points that) Tj T* 0 Tw 1.098409 Tw (are in the point cloud at the beginning. A point should be of length 3 such that the first entry) Tj T* 0 Tw (corresponds to the wind speed, the second to the wind angle and the last to the boat speed.) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If no ) Tj /F2 10 Tf (points) Tj /F1 10 Tf ( are passed, it will default to an empty array numpy.array\([]\)) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 14 Tm 1.426412 Tw 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) specifies wether or not the wind speeds \(resp. wind angles\)) Tj T* 0 Tw (given in ) Tj /F2 10 Tf (points) Tj /F1 10 Tf ( should be viewed as true wind.) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 14 Tm -0.033346 Tw 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) is set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the wind speeds \(resp. wind angles\) will be converted into true) Tj T* 0 Tw (wind.) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf ( class has to following \(private\) attributes:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
115 0 obj
<<
/Length 8758
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 676.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_data) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 676.1575 cm
Q
q
1 0 0 1 20 658.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf ( class defines the following dunder methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 652.1575 cm
Q
q
1 0 0 1 20 586.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__str__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__repr__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F3 10 Tf (__getitem__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 586.1575 cm
Q
q
1 0 0 1 20 568.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 562.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 586.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 580.1575 cm
Q
q
1 0 0 1 20 568.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all occuring wind speeds) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 568.1575 cm
Q
q
1 0 0 1 20 550.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 544.1575 cm
Q
q
1 0 0 1 20 532.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all occuring wind angles) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 532.1575 cm
Q
q
1 0 0 1 20 514.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 508.1575 cm
Q
q
1 0 0 1 20 496.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 496.1575 cm
Q
q
1 0 0 1 20 478.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 472.1575 cm
Q
q
1 0 0 1 20 313.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file or where the created .csv file will be located) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 14 Tm .871318 Tw 12 TL /F1 10 Tf 0 0 0 rg (Creates or overwrites a .csv file with the class data of object which called the function) Tj T* 0 Tw (via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (writer) Tj /F1 10 Tf (-class, see ) Tj 0 0 .501961 rg (writer) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file will be as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True Wind Speed ,True Wind Angle ,Boat Speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with the delimiter ',') Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 313.1575 cm
Q
q
1 0 0 1 20 295.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (add_points) Tj /F1 10 Tf (\() Tj /F2 10 Tf (new_points,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 289.1575 cm
Q
q
1 0 0 1 20 106.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 158 Tm  T* ET
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape \(_, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New points that are to be added to the point cloud. The point should) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be of length 3, with the first entry being the wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the second being the wind angle and the last being the boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the wind speeds are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the given wind speeds will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the wind angles are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the given wind angles will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 106.1575 cm
Q
q
1 0 0 1 20 88.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (change_points) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 82.15748 cm
Q
q
1 0 0 1 20 70.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 70.15748 cm
Q
q
1 0 0 1 20 52.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 46.15748 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 8 Tm  T* ET
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
116 0 obj
<<
/Length 9090
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 511.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 158 Tm  T* ET
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 511.1575 cm
Q
q
1 0 0 1 20 493.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 487.1575 cm
Q
q
1 0 0 1 20 238.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 238.1575 cm
Q
q
1 0 0 1 20 220.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 202.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 196.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 178.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 165.1575 Tm  T* ET
q
1 0 0 1 20 163.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 157.1575 cm
Q
q
1 0 0 1 20 127.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 127.1575 cm
Q
q
1 0 0 1 20 109.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 103.1575 cm
Q
q
1 0 0 1 20 49.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 49.15748 cm
Q
q
1 0 0 1 20 31.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 25.15748 cm
Q
q
1 0 0 1 20 7.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
117 0 obj
<<
/Length 8668
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 429 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 188 Tm  T* ET
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded polar plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, vie the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 429 cm
Q
q
1 0 0 1 20 411 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed_range=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 393 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 387 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 375 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 356 Tm  T* ET
q
1 0 0 1 20 354 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 318 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 318 cm
Q
q
1 0 0 1 20 300 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 294 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 222 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
118 0 obj
<<
/Length 8483
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 141.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 600 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded cartesian plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 600 cm
Q
q
1 0 0 1 20 582 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ax=None,) Tj ( ) Tj (min_color='green',) Tj T* ET
Q
Q
q
1 0 0 1 20 564 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (max_color='red',) Tj ( ) Tj (marker=None) Tj /F1 10 Tf (\):) Tj T* ET
Q
Q
q
1 0 0 1 20 558 cm
Q
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 260 Tm  T* ET
q
1 0 0 1 20 258 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 180 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (min_color) Tj /F1 10 Tf ( : See below for type, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the first/lower color of the color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Input can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (max_color) Tj /F1 10 Tf ( : See below for type, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the last/upper color of the color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Input can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyle) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the style of the markers in the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For all possible styles, see ) Tj 0 0 .501961 rg (marker) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 273 cm
Q
q
1 0 0 1 20 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_speed,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**kwargs) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 249 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 170 Tm  T* ET
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_speed) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram table, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.spatial) Tj /F1 10 Tf (.) Tj /F3 10 Tf (ConvexHull) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (ConvexHull) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then creates a polar plot of the convex hull, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 141.0236 cm
Q
 
endstream
endobj
119 0 obj
<<
/Nums [ 0 120 0 R 1 121 0 R 2 122 0 R 3 123 0 R 4 124 0 R 
  5 125 0 R 6 126 0 R 7 127 0 R 8 128 0 R 9 129 0 R 
  10 130 0 R 11 131 0 R 12 132 0 R 13 133 0 R 14 134 0 R 
  15 135 0 R ]
>>
endobj
120 0 obj
<<
/S /D /St 1
>>
endobj
121 0 obj
<<
/S /D /St 2
>>
endobj
122 0 obj
<<
/S /D /St 3
>>
endobj
123 0 obj
<<
/S /D /St 4
>>
endobj
124 0 obj
<<
/S /D /St 5
>>
endobj
125 0 obj
<<
/S /D /St 6
>>
endobj
126 0 obj
<<
/S /D /St 7
>>
endobj
127 0 obj
<<
/S /D /St 8
>>
endobj
128 0 obj
<<
/S /D /St 9
>>
endobj
129 0 obj
<<
/S /D /St 10
>>
endobj
130 0 obj
<<
/S /D /St 11
>>
endobj
131 0 obj
<<
/S /D /St 12
>>
endobj
132 0 obj
<<
/S /D /St 13
>>
endobj
133 0 obj
<<
/S /D /St 14
>>
endobj
134 0 obj
<<
/S /D /St 15
>>
endobj
135 0 obj
<<
/S /D /St 16
>>
endobj
xref
0 136
0000000000 65535 f 
0000000073 00000 n 
0000000135 00000 n 
0000000242 00000 n 
0000000347 00000 n 
0000000459 00000 n 
0000000629 00000 n 
0000000804 00000 n 
0000000990 00000 n 
0000001164 00000 n 
0000001407 00000 n 
0000001613 00000 n 
0000001805 00000 n 
0000002004 00000 n 
0000002214 00000 n 
0000002462 00000 n 
0000002672 00000 n 
0000002899 00000 n 
0000003015 00000 n 
0000003221 00000 n 
0000003448 00000 n 
0000003656 00000 n 
0000003877 00000 n 
0000004099 00000 n 
0000004320 00000 n 
0000004542 00000 n 
0000004763 00000 n 
0000005018 00000 n 
0000005267 00000 n 
0000005469 00000 n 
0000005691 00000 n 
0000005912 00000 n 
0000006161 00000 n 
0000006363 00000 n 
0000006585 00000 n 
0000006854 00000 n 
0000007075 00000 n 
0000007324 00000 n 
0000007526 00000 n 
0000007775 00000 n 
0000007977 00000 n 
0000008206 00000 n 
0000008427 00000 n 
0000008662 00000 n 
0000008884 00000 n 
0000009167 00000 n 
0000009373 00000 n 
0000009594 00000 n 
0000009828 00000 n 
0000010050 00000 n 
0000010271 00000 n 
0000010493 00000 n 
0000010714 00000 n 
0000010963 00000 n 
0000011165 00000 n 
0000011427 00000 n 
0000011649 00000 n 
0000011870 00000 n 
0000012119 00000 n 
0000012321 00000 n 
0000012543 00000 n 
0000012798 00000 n 
0000013019 00000 n 
0000013268 00000 n 
0000013470 00000 n 
0000013719 00000 n 
0000013921 00000 n 
0000014150 00000 n 
0000014371 00000 n 
0000014606 00000 n 
0000014828 00000 n 
0000015111 00000 n 
0000015317 00000 n 
0000015544 00000 n 
0000015765 00000 n 
0000015986 00000 n 
0000016208 00000 n 
0000016429 00000 n 
0000016677 00000 n 
0000016926 00000 n 
0000017128 00000 n 
0000017350 00000 n 
0000017571 00000 n 
0000017820 00000 n 
0000018022 00000 n 
0000018284 00000 n 
0000018506 00000 n 
0000018727 00000 n 
0000018976 00000 n 
0000019178 00000 n 
0000019427 00000 n 
0000019629 00000 n 
0000019858 00000 n 
0000020079 00000 n 
0000020314 00000 n 
0000020536 00000 n 
0000020826 00000 n 
0000020934 00000 n 
0000021223 00000 n 
0000021298 00000 n 
0000021412 00000 n 
0000021550 00000 n 
0000021676 00000 n 
0000021846 00000 n 
0000027456 00000 n 
0000036589 00000 n 
0000045767 00000 n 
0000054174 00000 n 
0000062946 00000 n 
0000072017 00000 n 
0000080925 00000 n 
0000089690 00000 n 
0000098490 00000 n 
0000107469 00000 n 
0000116599 00000 n 
0000125927 00000 n 
0000134738 00000 n 
0000143881 00000 n 
0000152602 00000 n 
0000161138 00000 n 
0000161346 00000 n 
0000161381 00000 n 
0000161416 00000 n 
0000161451 00000 n 
0000161486 00000 n 
0000161521 00000 n 
0000161556 00000 n 
0000161591 00000 n 
0000161626 00000 n 
0000161661 00000 n 
0000161697 00000 n 
0000161733 00000 n 
0000161769 00000 n 
0000161805 00000 n 
0000161841 00000 n 
0000161877 00000 n 
trailer
<<
/ID 
[<08408eb96955ad55982a7ef3405a2138><08408eb96955ad55982a7ef3405a2138>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 97 0 R
/Root 96 0 R
/Size 136
>>
startxref
161913
%%EOF
