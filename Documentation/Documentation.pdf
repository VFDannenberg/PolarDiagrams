%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 14 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 669.0236 115.7029 681.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 651.0236 128.4829 663.0236 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://pypi.org/project/pynmea2/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 633.0236 126.8229 645.0236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.scipy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 615.0236 108.4729 627.0236 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R ] /Contents 65 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
10 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://jieter.github.io/orc-data/site/)
>> /Border [ 0 0 0 ] /Rect [ 265.1729 636.8661 287.3929 648.8661 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://opencpn.org/OpenCPN/plugins/polar.html)
>> /Border [ 0 0 0 ] /Rect [ 316.8729 624.8661 419.1329 636.8661 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Annots [ 10 0 R 11 0 R ] /Contents 66 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
13 0 obj
<<
/Contents 67 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
14 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
15 0 obj
<<
/Contents 68 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
16 0 obj
<<
/Contents 69 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
17 0 obj
<<
/Contents 70 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
18 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 495.0236 219.9229 507.0236 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 495.0236 259.9429 507.0236 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Annots [ 18 0 R 19 0 R ] /Contents 71 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
21 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 192.5328 266.0236 219.2028 278.0236 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 241.4428 266.0236 259.2228 278.0236 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Annots [ 21 0 R 22 0 R ] /Contents 72 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
24 0 obj
<<
/Contents 73 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
25 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 405.0129 741.0236 431.6829 753.0236 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 453.9229 741.0236 471.7029 753.0236 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 405.0129 464.0236 431.6829 476.0236 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 453.9229 464.0236 471.7029 476.0236 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Annots [ 25 0 R 26 0 R 27 0 R 28 0 R ] /Contents 74 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
30 0 obj
<<
/Contents 75 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
31 0 obj
<<
/Contents 76 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
32 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 192.5328 386.0236 219.2028 398.0236 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 241.4428 386.0236 259.2228 398.0236 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Annots [ 32 0 R 33 0 R ] /Contents 77 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
35 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 192.5328 166.8661 219.2028 178.8661 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 241.4428 166.8661 259.2228 178.8661 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Annots [ 35 0 R 36 0 R ] /Contents 78 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
38 0 obj
<<
/Contents 79 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
39 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 380.2928 609.0236 406.9628 621.0236 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 429.2028 609.0236 446.9828 621.0236 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 380.2928 187.8661 406.9628 199.8661 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 429.2028 187.8661 446.9828 199.8661 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/Annots [ 39 0 R 40 0 R 41 0 R 42 0 R ] /Contents 80 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
44 0 obj
<<
/Contents 81 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
45 0 obj
<<
/Contents 82 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
46 0 obj
<<
/Contents 83 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
47 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 531.0236 219.9229 543.0236 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 531.0236 259.9429 543.0236 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Annots [ 47 0 R 48 0 R ] /Contents 84 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
50 0 obj
<<
/Contents 85 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
51 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 729.0236 219.9229 741.0236 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 729.0236 259.9429 741.0236 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/Annots [ 51 0 R 52 0 R ] /Contents 86 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
54 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 405.0129 382.8661 431.6829 394.8661 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 453.9229 382.8661 471.7029 394.8661 ] /Subtype /Link /Type /Annot
>>
endobj
56 0 obj
<<
/Annots [ 54 0 R 55 0 R ] /Contents 87 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
57 0 obj
<<
/Contents 88 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 64 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
58 0 obj
<<
/Outlines 60 0 R /PageLabels 89 0 R /PageMode /UseNone /Pages 64 0 R /Type /Catalog
>>
endobj
59 0 obj
<<
/Author () /CreationDate (D:20210702142321-01'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20210702142321-01'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (hrosailing-Module Documentation) /Trapped /False
>>
endobj
60 0 obj
<<
/Count 3 /First 61 0 R /Last 63 0 R /Type /Outlines
>>
endobj
61 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 729.0236 0 ] /Next 62 0 R /Parent 60 0 R /Title (Dependencies)
>>
endobj
62 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 606.0236 0 ] /Next 63 0 R /Parent 60 0 R /Prev 61 0 R /Title (How To Use This Module)
>>
endobj
63 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 474.6236 0 ] /Parent 60 0 R /Prev 62 0 R /Title (Contents Of This Module)
>>
endobj
64 0 obj
<<
/Count 24 /Kids [ 9 0 R 12 0 R 13 0 R 15 0 R 16 0 R 17 0 R 20 0 R 23 0 R 24 0 R 29 0 R 
  30 0 R 31 0 R 34 0 R 37 0 R 38 0 R 43 0 R 44 0 R 45 0 R 46 0 R 49 0 R 
  50 0 R 53 0 R 56 0 R 57 0 R ] /Type /Pages
>>
endobj
65 0 obj
<<
/Length 7960
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 61.05488 0 Td 24 TL /F2 20 Tf 0 0 0 rg (hrosailing) Tj /F3 20 Tf (-Module Documentation) Tj T* -61.05488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module has the following third-party dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 672.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (numpy) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 666.0236 cm
Q
q
1 0 0 1 62.69291 654.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (matplotlib) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
Q
q
1 0 0 1 62.69291 636.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pynmea2) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 630.0236 cm
Q
q
1 0 0 1 62.69291 618.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (scipy) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
Q
q
1 0 0 1 62.69291 585.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (How To Use This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 567.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (After installing/downloading one can easily use the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module via) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 62.69291 535.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( import hrosailing) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 535.8236 cm
Q
q
1 0 0 1 62.69291 517.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 511.8236 cm
Q
q
1 0 0 1 62.69291 486.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( from hrosailing import ...) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 486.6236 cm
Q
q
1 0 0 1 62.69291 453.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Contents Of This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 435.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module defines the following public functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 429.6236 cm
Q
q
1 0 0 1 62.69291 399.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (apparent_wind_to_true) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (true_wind_to_apparent) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 399.6236 cm
Q
q
1 0 0 1 62.69291 381.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module has the following public submodules:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 375.6236 cm
Q
q
1 0 0 1 62.69291 339.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (hrosailing.polardiagram) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (hrosailing.processing) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 339.6236 cm
Q
q
1 0 0 1 62.69291 321.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing.polardiagram) Tj /F1 10 Tf (-module defines the following public functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 315.6236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 217 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 211 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 151 cm
Q
q
1 0 0 1 20 139 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the .) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (-method of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance.) Tj T* ET
Q
Q
q
1 0 0 1 20 139 cm
Q
q
1 0 0 1 20 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv-file is located or where a new .csv-file will) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (written to the .csv-file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (from_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (fmt='hro',) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Reads a .csv file and returns the ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (contained in it) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
66 0 obj
<<
/Length 7831
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 416 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 261 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 188 Tm  T* ET
q
1 0 0 1 20 186 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to a .csv file which will be read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (fmt) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The "format" of the .csv file. Currently supported formats are:) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ('hro' -) Tj (> format created by the ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ('orc' -) Tj (> format found at ) Tj 0 0 .501961 rg (ORC) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ('opencpn' -) Tj (> format created by the ) Tj 0 0 .501961 rg (OpenCPN Polar Plugin) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ('array' -) Tj (>) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if wind data in file should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (an unknown format was specified) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the file can't be found, opened or read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 416 cm
Q
q
1 0 0 1 20 398 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 392 cm
Q
q
1 0 0 1 20 235 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 151 cm
Q
q
1 0 0 1 20 139 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the .) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (-method of the ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 139 cm
Q
q
1 0 0 1 20 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .pkl file is located or where a new .pkl file will) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (written to the .csv-file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 217 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (depickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 211 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 97 cm
Q
q
1 0 0 1 20 85 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Reads a .pkl file and returns the ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 73 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (contained in it) Tj T* ET
Q
Q
q
1 0 0 1 20 73 cm
Q
q
1 0 0 1 20 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to a .pkl file which will be read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if file can't be found, opened, or read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetric_polar_diagram) Tj /F1 10 Tf (\(obj\)) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Symmetrizeses an ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance, meaning for every) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (datapoint with:) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed w) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle phi) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (boat speed s) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
67 0 obj
<<
/Length 7383
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 535.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 218 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a new data point with:) Tj T* ET
Q
Q
q
1 0 0 1 20 218 cm
Q
q
1 0 0 1 20 212 cm
Q
q
1 0 0 1 20 170 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed w) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle 360 - phi) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (boat speed s) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 170 cm
Q
q
1 0 0 1 20 164 cm
Q
q
1 0 0 1 20 152 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be added) Tj T* ET
Q
Q
q
1 0 0 1 20 152 cm
Q
q
1 0 0 1 20 136 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 85 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (symmetrized) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (symmetric) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ("symmetrized" version of ) Tj /F2 10 Tf (obj) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if ) Tj /F2 10 Tf (obj) Tj /F1 10 Tf ( is not of type ) Tj /F2 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( or) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 535.0236 cm
Q
q
1 0 0 1 62.69291 517.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (-module defines the following public classes:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 511.0236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 422.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 416.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 399 cm
Q
q
1 0 0 1 20 387 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An abstract base class for the ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf ( classes) Tj T* ET
Q
Q
q
1 0 0 1 20 387 cm
Q
q
1 0 0 1 20 371 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 247 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 111 Tm  T* ET
q
1 0 0 1 20 109 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 103 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 97 cm
Q
q
1 0 0 1 20 85 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Writes ) Tj /F2 10 Tf (self) Tj /F1 10 Tf ( to a .pkl file) Tj T* ET
Q
Q
q
1 0 0 1 20 85 cm
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .pkl file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.pkl file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 231 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Abstract Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 218 Tm  T* ET
q
1 0 0 1 20 216 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range,) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),show_legend=True,) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
68 0 obj
<<
/Length 7728
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 601.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 74 Tm  T* ET
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend=True,) Tj ( ) Tj (legend_kw=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 601.1575 cm
Q
q
1 0 0 1 20 583.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_res=None,) Tj ( ) Tj (wa_res=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 565.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bsps=None,) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 559.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 542 cm
Q
q
1 0 0 1 20 530 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar diagram in form of a table) Tj T* ET
Q
Q
q
1 0 0 1 20 530 cm
Q
q
1 0 0 1 20 514 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 115 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 386 Tm  T* ET
q
1 0 0 1 20 384 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_res) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 378 cm
Q
q
1 0 0 1 20 282 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind speeds that will correspond to the columns of the table) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Can either be a sequence of length cdim or a number) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If a number num is passed, ) Tj /F2 10 Tf (numpy.arange\(num,) Tj ( ) Tj (40,) Tj ( ) Tj (num\)) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be assigned to ws_res) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.arange\(2,) Tj ( ) Tj (42,) Tj ( ) Tj (2\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 264 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa_res) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 258 cm
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind angles that will correspond to the columns of the table) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Can either be sequence of length rdim or a number) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If a number num is passed, ) Tj /F2 10 Tf (numpy.arange\(num,) Tj ( ) Tj (360,) Tj ( ) Tj (num\)) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be assigned to wa_res) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bsps) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sequence of corresponding boat speeds, should be broadcastable) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (to the shape \(rdim, cdim\)) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.zeros\(\(rdim,) Tj ( ) Tj (cdim\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if the given wind data should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (False) Tj /F1 10 Tf (, wind data will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 109 cm
Q
q
1 0 0 1 20 97 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if ) Tj /F2 10 Tf (bsps) Tj /F1 10 Tf ( can't be broadcasted to shape \(rdim, cdim\)) Tj T* ET
Q
Q
q
1 0 0 1 20 97 cm
Q
q
1 0 0 1 20 81 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 68 Tm  T* ET
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_resolution_wind_speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_resolution_wind_angle) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
69 0 obj
<<
/Length 7772
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 652 Tm  T* ET
q
1 0 0 1 20 650 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 644 cm
Q
q
1 0 0 1 20 626 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_bsps) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 626 cm
Q
q
1 0 0 1 20 608 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path,) Tj ( ) Tj (fmt='hro') Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 602 cm
Q
q
1 0 0 1 20 361 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 223 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a .csv file with delimiter ',' and the following format:) Tj T* ET
Q
Q
q
1 0 0 1 20 223 cm
Q
q
1 0 0 1 20 217 cm
Q
q
1 0 0 1 20 127 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind speed resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind angle resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Boat speeds:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 127 cm
Q
q
1 0 0 1 20 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 80 Tm  T* ET
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (fmt) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the format of the created csv) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 361 cm
Q
q
1 0 0 1 20 343 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (change_entries) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,new_bsps,) Tj ( ) Tj (ws=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 325 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wa=None``\)) Tj T* ET
Q
Q
q
1 0 0 1 20 319 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 313 cm
Q
q
1 0 0 1 20 301 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Changes specified entries in the table) Tj T* ET
Q
Q
q
1 0 0 1 20 301 cm
Q
q
1 0 0 1 20 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 206 Tm  T* ET
q
1 0 0 1 20 204 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_bsps) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 168 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sequence containing the new data to be inserted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified entries) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 150 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Element\(s\) of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj /F1 10 Tf (, specifying) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the columns, where ) Tj /F2 10 Tf (new_bsps) Tj /F1 10 Tf ( will be inserted) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Element\(s\) of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj /F1 10 Tf (, specifiying) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the rows, where ) Tj /F2 10 Tf (new_bsps) Tj /F1 10 Tf ( will be inserted) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( is not contained in ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa) Tj /F1 10 Tf ( is not contained in ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_bsps) Tj /F1 10 Tf ( can't be broadcasted to a fitting shape) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
70 0 obj
<<
/Length 7606
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 661.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 643.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 637.1575 cm
Q
q
1 0 0 1 20 384.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 247 cm
Q
q
1 0 0 1 20 235 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice \(column\) of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 176 Tm  T* ET
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice \(column\) of the polar diagram, given as) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (an element of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (matplotlib.axes.Axes.plot function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not an element of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 384.1575 cm
Q
q
1 0 0 1 20 366.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 348.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 342.1575 cm
Q
q
1 0 0 1 20 77.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 259 cm
Q
q
1 0 0 1 20 247 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice \(column\) of the) Tj T* ET
Q
Q
q
1 0 0 1 20 235 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 176 Tm  T* ET
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice \(column\) of the polar diagram, given as) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (an element of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (matplotlib.axes.Axes.plot function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not an element of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 77.15748 cm
Q
q
1 0 0 1 20 59.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 41.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 35.15748 cm
Q
q
1 0 0 1 20 5.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of multiple slices \(columns\) of the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
71 0 obj
<<
/Length 7649
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 652.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 639.1575 Tm  T* ET
q
1 0 0 1 20 637.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 631.1575 cm
Q
q
1 0 0 1 20 571.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices \(columns\) of the polar diagram table, given) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (as an Iterable of elements of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing it passed, it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 571.1575 cm
Q
q
1 0 0 1 20 553.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 547.1575 cm
Q
q
1 0 0 1 20 499.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 499.1575 cm
Q
q
1 0 0 1 20 481.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 475.1575 cm
Q
q
1 0 0 1 20 199.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 270 cm
Q
q
1 0 0 1 20 258 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (color) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Otherwise if exactly 2 colors are passed, the) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices will be plotted with a color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consiting of the given two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If more than 2 colors are passed, either) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified colors, and the rest will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted in the default color 'blue',) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or one can specify certain slices to be) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted in a certain color by passing a) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of \(ws, color\) pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to the tuple \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 199.1575 cm
Q
q
1 0 0 1 20 181.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 175.1575 cm
Q
q
1 0 0 1 20 31.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options:) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If the slices are plotted with a color gradient,) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 31.15748 cm
Q
q
1 0 0 1 20 13.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 7.15748 cm
Q
q
1 0 0 1 20 -22.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
72 0 obj
<<
/Length 6028
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 514.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 116 Tm  T* ET
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if at least one element of ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is not in) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 514.1575 cm
Q
q
1 0 0 1 20 496.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 478.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 472.1575 cm
Q
q
1 0 0 1 20 9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 457.1575 cm
Q
q
1 0 0 1 20 445.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of multiple slices \(columns\) of the) Tj T* ET
Q
Q
q
1 0 0 1 20 433.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 433.1575 cm
Q
q
1 0 0 1 20 417.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 404.1575 Tm  T* ET
q
1 0 0 1 20 402.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 396.1575 cm
Q
q
1 0 0 1 20 336.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices \(columns\) of the polar diagram table, given) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (as an Iterable of elements of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing it passed, it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 336.1575 cm
Q
q
1 0 0 1 20 318.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 312.1575 cm
Q
q
1 0 0 1 20 264.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 264.1575 cm
Q
q
1 0 0 1 20 246.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 240.1575 cm
Q
q
1 0 0 1 20 156.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
73 0 obj
<<
/Length 8153
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 148.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 482 Tm  T* ET
q
1 0 0 1 20 348 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (color) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Otherwise if exactly 2 colors are passed, the) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices will be plotted with a color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consiting of the given two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If more than 2 colors are passed, either) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified colors, and the rest will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted in the default color 'blue',) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or one can specify certain slices to be) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted in a certain color by passing a) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of \(ws, color\) pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to the tuple \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 330 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options:) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If the slices are plotted with a color gradient,) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if at least one element of ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is not in) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 148.1575 cm
Q
q
1 0 0 1 20 130.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (colors=\('blue',) Tj ( ) Tj ('blue'\)) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 124.1575 cm
Q
q
1 0 0 1 20 -3 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 121 cm
Q
q
1 0 0 1 20 109 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 3d plot of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 109 cm
Q
q
1 0 0 1 20 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 80 Tm  T* ET
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf (: ) Tj /F2 10 Tf (mpl_toolkits.mplot3d.axes3d.Axes3D) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
74 0 obj
<<
/Length 7825
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 616.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 44 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If no color gradient is desired, set both elements) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (to the same color) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('blue', 'blue'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 616.1575 cm
Q
q
1 0 0 1 20 598.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 580.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (*legend_k) Tj (w) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 574.1575 cm
Q
q
1 0 0 1 20 123.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 445 cm
Q
q
1 0 0 1 20 433 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 'wind speed vs. wind angle' color gradient plot of the) Tj T* ET
Q
Q
q
1 0 0 1 20 421 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram with respect to the respective boat speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 421 cm
Q
q
1 0 0 1 20 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 392 Tm  T* ET
q
1 0 0 1 20 390 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 384 cm
Q
q
1 0 0 1 20 336 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 336 cm
Q
q
1 0 0 1 20 318 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyleor) Tj /F1 10 Tf ( equivalent, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Markerstyle for the created scatter plot) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, it will default to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (object.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 123.1575 cm
Q
q
1 0 0 1 20 105.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 99.15748 cm
Q
q
1 0 0 1 20 3 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 61 cm
Q
q
1 0 0 1 20 49 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a slice \(column\) of the polar diagram and) Tj T* ET
Q
Q
q
1 0 0 1 20 37 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (creates a polar plot of it) Tj T* ET
Q
Q
q
1 0 0 1 20 37 cm
Q
q
1 0 0 1 20 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 8 Tm  T* ET
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
75 0 obj
<<
/Length 8136
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 502.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 173 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 140 Tm  T* ET
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice \(column\) of the polar diagram, given as an) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (element of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not an element of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 502.1575 cm
Q
q
1 0 0 1 20 484.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf (\() Tj /F2 10 Tf (f,) Tj ( ) Tj (params,) Tj ( ) Tj (radians=False) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 478.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 472.1575 cm
Q
q
1 0 0 1 20 460.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar diagram given by a) Tj T* ET
Q
Q
q
1 0 0 1 20 448.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (fitted curve/surface) Tj T* ET
Q
Q
q
1 0 0 1 20 448.1575 cm
Q
q
1 0 0 1 20 432.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 219.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 200 Tm  T* ET
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj T* ET
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Curve/surface that describes the polar diagram, given as) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a function, with the signature ) Tj /F2 10 Tf (f\(x,) Tj ( ) Tj (*params\)) Tj ( ) Tj (-) Tj (>) Tj ( ) Tj (y) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (where x is a ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape \(n, 2\)) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which corresponds to pairs of wind speed and wind angle) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and y is a ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape \(n, \) or \(n, 1\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which corresponds to the boat speed at the resp.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed and wind angle.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (params) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( or Sequence) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Optimal parameters for f) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (radians) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if f takes the wind angles to be in radians or degrees) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 203.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 190.1575 Tm  T* ET
q
1 0 0 1 20 188.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj T* ET
Q
Q
q
1 0 0 1 20 182.1575 cm
Q
q
1 0 0 1 20 164.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_f) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 164.1575 cm
Q
q
1 0 0 1 20 146.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 140.1575 cm
Q
q
1 0 0 1 20 122.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 122.1575 cm
Q
q
1 0 0 1 20 104.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 98.15748 cm
Q
q
1 0 0 1 20 80.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_params) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 80.15748 cm
Q
q
1 0 0 1 20 62.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 56.15748 cm
Q
q
1 0 0 1 20 32.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a .csv file with delimiter ':' and the following format:) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
76 0 obj
<<
/Length 8702
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 570.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 85 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Function: ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj /F1 10 Tf (.__name__) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Radians: ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Parameters: ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 85 cm
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 570.1575 cm
Q
q
1 0 0 1 20 552.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 546.1575 cm
Q
q
1 0 0 1 20 257.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 283 cm
Q
q
1 0 0 1 20 271 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 271 cm
Q
q
1 0 0 1 20 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 242 Tm  T* ET
q
1 0 0 1 20 240 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 234 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram, given as a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice will then equal) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self\(numpy.column_stack\(\(numpy.array\([ws]) Tj ( ) Tj (*) Tj ( ) Tj (1000\),) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (1000\)\)\),) Tj ( ) Tj (self.params\)) Tj /F1 10 Tf ( or) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self\(numpy.column_stack\(\(numpy.array\)[ws]) Tj ( ) Tj (*) Tj ( ) Tj (1000\),) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.deg2rad\(numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (1000\)\)\)\),) Tj ( ) Tj (self.params\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (depending on the value of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 257.1575 cm
Q
q
1 0 0 1 20 239.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 233.1575 cm
Q
q
1 0 0 1 20 -9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 223 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 223 cm
Q
q
1 0 0 1 20 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram, given as a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice will then equal) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self\(numpy.column_stack\(\(numpy.array\([ws]) Tj ( ) Tj (*) Tj ( ) Tj (1000\),) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (1000\)\)\),) Tj ( ) Tj (self.params\)) Tj /F1 10 Tf ( or) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self\(numpy.column_stack\(\(numpy.array\)[ws]) Tj ( ) Tj (*) Tj ( ) Tj (1000\),) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.deg2rad\(numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (1000\)\)\)\),) Tj ( ) Tj (self.params\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (depending on the value of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
77 0 obj
<<
/Length 8197
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 658.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 658.1575 cm
Q
q
1 0 0 1 20 640.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 622.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 616.1575 cm
Q
q
1 0 0 1 20 9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 601.1575 cm
Q
q
1 0 0 1 20 589.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of multiple slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 589.1575 cm
Q
q
1 0 0 1 20 573.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 560.1575 Tm  T* ET
q
1 0 0 1 20 558.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3 or ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 552.1575 cm
Q
q
1 0 0 1 20 456.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given either as a) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of three values, which will be interpreted) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as a start and end point of an interval aswell as) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a number of slices, which will be evenly spaced) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the given interval, or as a list of specific) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed values) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 456.1575 cm
Q
q
1 0 0 1 20 438.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 432.1575 cm
Q
q
1 0 0 1 20 384.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 384.1575 cm
Q
q
1 0 0 1 20 366.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 360.1575 cm
Q
q
1 0 0 1 20 84.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 270 cm
Q
q
1 0 0 1 20 258 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (color) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Otherwise if exactly 2 colors are passed, the) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices will be plotted with a color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consiting of the given two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If more than 2 colors are passed, either) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified colors, and the rest will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted in the default color 'blue',) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or one can specify certain slices to be) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted in a certain color by passing a) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of \(ws, color\) pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to the tuple \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84.15748 cm
Q
q
1 0 0 1 20 66.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 60.15748 cm
Q
q
1 0 0 1 20 -21 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options:) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If the slices are plotted with a color gradient,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
78 0 obj
<<
/Length 7982
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 430.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 230 Tm  T* ET
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 430.1575 cm
Q
q
1 0 0 1 20 412.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 394.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 388.1575 cm
Q
q
1 0 0 1 20 9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 373.1575 cm
Q
q
1 0 0 1 20 361.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of multiple slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 361.1575 cm
Q
q
1 0 0 1 20 345.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 332.1575 Tm  T* ET
q
1 0 0 1 20 330.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3 or ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324.1575 cm
Q
q
1 0 0 1 20 228.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given either as a) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of three values, which will be interpreted) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as a start and end point of an interval aswell as) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a number of slices, which will be evenly spaced) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the given interval, or as a list of specific) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed values) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 228.1575 cm
Q
q
1 0 0 1 20 210.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 204.1575 cm
Q
q
1 0 0 1 20 156.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156.1575 cm
Q
q
1 0 0 1 20 138.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132.1575 cm
Q
q
1 0 0 1 20 -15 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (color) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Otherwise if exactly 2 colors are passed, the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices will be plotted with a color gradient) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
79 0 obj
<<
/Length 7590
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 202.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 458 Tm  T* ET
q
1 0 0 1 20 348 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consiting of the given two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If more than 2 colors are passed, either) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified colors, and the rest will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted in the default color 'blue',) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or one can specify certain slices to be) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted in a certain color by passing a) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of \(ws, color\) pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to the tuple \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 330 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options:) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If the slices are plotted with a color gradient,) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 202.1575 cm
Q
q
1 0 0 1 20 184.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (100\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 166.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('blue',) Tj ( ) Tj ('blue'\)) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 160.1575 cm
Q
q
1 0 0 1 20 -3 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 145 cm
Q
q
1 0 0 1 20 133 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 3d plot of a part of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 133 cm
Q
q
1 0 0 1 20 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 104 Tm  T* ET
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A region of the polar diagram given as a tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of three values, which will be interpreted as) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a start and an end point of an interval aswell as) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a number of samples in this interval. The more) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (samples there are, the "smoother" the resulting) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot will be) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 100\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
80 0 obj
<<
/Length 7110
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 37.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 484.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 176 Tm  T* ET
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf (: ) Tj /F2 10 Tf (mpl_toolkits.mplot3d.axes3d.Axes3D) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If no color gradient is desired, set both elements) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (to the same color) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('blue', 'blue'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 484.1575 cm
Q
q
1 0 0 1 20 466.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (100\),) Tj T* ET
Q
Q
q
1 0 0 1 20 448.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (**legend_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 442.1575 cm
Q
q
1 0 0 1 20 9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 379 cm
Q
q
1 0 0 1 20 367 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 'wind speed vs. wind angle' color gradient plot of a part) Tj T* ET
Q
Q
q
1 0 0 1 20 355 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of the polar diagram with respect to the respective boat speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 355 cm
Q
q
1 0 0 1 20 339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 326 Tm  T* ET
q
1 0 0 1 20 324 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 318 cm
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A region of the polar diagram given as a tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of three values, which will be interpreted as) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a start and an end point of an interval aswell as) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a number of samples in this interval.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 100\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optinal) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyleor) Tj /F1 10 Tf ( equivalent, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Markerstyle for the created scatter plot) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, it will default to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
81 0 obj
<<
/Length 8482
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 235 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 438 Tm  T* ET
q
1 0 0 1 20 325 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 110 Tm  T* ET
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (object.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 325 cm
Q
q
1 0 0 1 20 307 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 301 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 295 cm
Q
q
1 0 0 1 20 283 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram and) Tj T* ET
Q
Q
q
1 0 0 1 20 271 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (creates a polar plot of it) Tj T* ET
Q
Q
q
1 0 0 1 20 271 cm
Q
q
1 0 0 1 20 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 242 Tm  T* ET
q
1 0 0 1 20 240 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 234 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram, given as a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice will then equal) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self\(numpy.column_stack\(\(numpy.array\([ws]) Tj ( ) Tj (*) Tj ( ) Tj (1000\),) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (1000\)\)\),) Tj ( ) Tj (self.params\)) Tj /F1 10 Tf ( or) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self\(numpy.column_stack\(\(numpy.array\)[ws]) Tj ( ) Tj (*) Tj ( ) Tj (1000\),) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy.deg2rad\(numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (1000\)\)\)\),) Tj ( ) Tj (self.params\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (depending on the value of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 217 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pts=None,) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 211 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 205 cm
Q
q
1 0 0 1 20 193 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar diagram given by a point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 193 cm
Q
q
1 0 0 1 20 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 146 Tm  T* ET
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pts) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Initial points of the point cloud, given as a sequence of points) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consisting of wind speed, wind angle and boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, point cloud will be initialized) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with an empty array) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if the given wind data should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (False) Tj /F1 10 Tf (, wind data will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if ) Tj /F2 10 Tf (pts) Tj /F1 10 Tf ( can't be broadcasted to shape \(n, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
82 0 obj
<<
/Length 8098
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 664.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 649.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 643.1575 cm
Q
q
1 0 0 1 20 625.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all the different wind speeds in the point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 625.1575 cm
Q
q
1 0 0 1 20 607.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 601.1575 cm
Q
q
1 0 0 1 20 583.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all the different wind angles in the point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 583.1575 cm
Q
q
1 0 0 1 20 565.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 559.1575 cm
Q
q
1 0 0 1 20 541.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_pts) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 541.1575 cm
Q
q
1 0 0 1 20 523.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 517.1575 cm
Q
q
1 0 0 1 20 366.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 145 cm
Q
q
1 0 0 1 20 133 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a .csv file with delimiter ',' and the following format) Tj T* ET
Q
Q
q
1 0 0 1 20 133 cm
Q
q
1 0 0 1 20 127 cm
Q
q
1 0 0 1 20 85 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True wind speed ,True wind angle ,Boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 85 cm
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 366.1575 cm
Q
q
1 0 0 1 20 348.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (add_points) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (new_pts,) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 342.1575 cm
Q
q
1 0 0 1 20 101.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 223 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Adds additional points to the point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 223 cm
Q
q
1 0 0 1 20 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 140 Tm  T* ET
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New points to be added to the point cloud given as) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a sequence of points consisting of wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle and boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if the given wind data should be viewed) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (False) Tj /F1 10 Tf (, wind data will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises an exception if) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_pts) Tj /F1 10 Tf ( can't be broadcasted to shape \(n, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_pts) Tj /F1 10 Tf ( is an empty array) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 101.1575 cm
Q
q
1 0 0 1 20 83.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 65.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 59.15748 cm
Q
q
1 0 0 1 20 -33 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 86.15748 cm
Q
q
1 0 0 1 20 74.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 74.15748 cm
Q
q
1 0 0 1 20 58.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 45.15748 Tm  T* ET
q
1 0 0 1 20 43.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 37.15748 cm
Q
q
1 0 0 1 20 1.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram given by a single) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
83 0 obj
<<
/Length 8009
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 34.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 478.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 152 Tm  T* ET
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then consists of all rows of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the first entry being equal to ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if there are no rows in ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pts) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 478.1575 cm
Q
q
1 0 0 1 20 460.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 442.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 436.1575 cm
Q
q
1 0 0 1 20 153.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 277 cm
Q
q
1 0 0 1 20 265 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 265 cm
Q
q
1 0 0 1 20 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 206 Tm  T* ET
q
1 0 0 1 20 204 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram given by a single) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then consists of all rows of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the first entry being equal to ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if there are no rows in ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pts) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 153.1575 cm
Q
q
1 0 0 1 20 135.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 117.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=Non) Tj (e,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 111.1575 cm
Q
q
1 0 0 1 20 3 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 102.1575 cm
Q
q
1 0 0 1 20 90.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of multiple slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 90.15748 cm
Q
q
1 0 0 1 20 74.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 61.15748 Tm  T* ET
q
1 0 0 1 20 59.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2 or ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 53.15748 cm
Q
q
1 0 0 1 20 -0.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either a tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of two values which will be interpreted as) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a lower and an upper bound of the wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (such that all slices that correspond a wind speed) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
84 0 obj
<<
/Length 7553
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 607.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (that fits within these bounds will be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or as a list of specific slices given as the values) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of the corresponding wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, np.inf\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 607.1575 cm
Q
q
1 0 0 1 20 589.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 583.1575 cm
Q
q
1 0 0 1 20 535.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 535.1575 cm
Q
q
1 0 0 1 20 517.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 511.1575 cm
Q
q
1 0 0 1 20 235.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 270 cm
Q
q
1 0 0 1 20 258 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (color) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Otherwise if exactly 2 colors are passed, the) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices will be plotted with a color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consiting of the given two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If more than 2 colors are passed, either) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified colors, and the rest will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted in the default color 'blue',) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or one can specify certain slices to be) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted in a certain color by passing a) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of \(ws, color\) pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to the tuple \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 235.1575 cm
Q
q
1 0 0 1 20 217.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 211.1575 cm
Q
q
1 0 0 1 20 67.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options:) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If the slices are plotted with a color gradient,) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 67.15748 cm
Q
q
1 0 0 1 20 49.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 43.15748 cm
Q
q
1 0 0 1 20 -16.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
85 0 obj
<<
/Length 5253
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 34.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 532.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 86 Tm  T* ET
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception in the case that ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is a list and there) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (is a wind_speed ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( in ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( such that there are no rows in) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pts) Tj /F1 10 Tf ( with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 532.1575 cm
Q
q
1 0 0 1 20 514.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws_range=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 496.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=Non) Tj (e,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 490.1575 cm
Q
q
1 0 0 1 20 9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 206 Tm  T* ET
q
1 0 0 1 20 204 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2 or ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either a tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of two values which will be interpreted as) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a lower and an upper bound of the wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (such that all slices that correspond a wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (that fits within these bounds will be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or as a list of specific slices given as the values) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of the corresponding wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, np.inf\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
86 0 obj
<<
/Length 8063
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 46.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 572 Tm  T* ET
q
1 0 0 1 20 348 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 270 cm
Q
q
1 0 0 1 20 258 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (color) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Otherwise if exactly 2 colors are passed, the) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices will be plotted with a color gradient) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consiting of the given two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If more than 2 colors are passed, either) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the specified colors, and the rest will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted in the default color 'blue',) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or one can specify certain slices to be) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted in a certain color by passing a) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (tuple of \(ws, color\) pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to the tuple \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 330 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options:) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If the slices are plotted with a color gradient,) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj /F1 10 Tf ( object) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception in the case that ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is a list and there) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (is a wind_speed ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( in ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( such that there are no rows in) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pts) Tj /F1 10 Tf ( with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 46.15748 cm
Q
q
1 0 0 1 20 28.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (. ) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 22.15748 cm
Q
q
1 0 0 1 20 4.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 3d plot of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
87 0 obj
<<
/Length 7541
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 660 Tm  T* ET
q
1 0 0 1 20 529 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 116 Tm  T* ET
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (mpl_toolkits.mplot3d.axes3d.Axes3D) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 529 cm
Q
q
1 0 0 1 20 511 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 493 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (**legend_) Tj (kw) Tj /F1 10 Tf (\):) Tj T* ET
Q
Q
q
1 0 0 1 20 487 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 439 cm
Q
q
1 0 0 1 20 427 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 'wind speed vs. wind angle' color gradient plot of the) Tj T* ET
Q
Q
q
1 0 0 1 20 415 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram with respect to the respective boat speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 415 cm
Q
q
1 0 0 1 20 399 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 386 Tm  T* ET
q
1 0 0 1 20 384 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 378 cm
Q
q
1 0 0 1 20 336 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 336 cm
Q
q
1 0 0 1 20 318 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 246 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyleor) Tj /F1 10 Tf ( equivalent, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Markerstyle for the created scatter plot) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, it will default to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (object.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Will only be used if 'show_legend=True') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
88 0 obj
<<
/Length 3559
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 503.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 249 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 283 cm
Q
q
1 0 0 1 20 271 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a slice of the polar diagram and) Tj T* ET
Q
Q
q
1 0 0 1 20 259 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (creates a polar plot of it) Tj T* ET
Q
Q
q
1 0 0 1 20 259 cm
Q
q
1 0 0 1 20 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 200 Tm  T* ET
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram given by a single) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then consists of all rows of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the first entry being equal to ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises an exception if there are no rows in ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pts) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 503.0236 cm
Q
 
endstream
endobj
89 0 obj
<<
/Nums [ 0 90 0 R 1 91 0 R 2 92 0 R 3 93 0 R 4 94 0 R 
  5 95 0 R 6 96 0 R 7 97 0 R 8 98 0 R 9 99 0 R 
  10 100 0 R 11 101 0 R 12 102 0 R 13 103 0 R 14 104 0 R 
  15 105 0 R 16 106 0 R 17 107 0 R 18 108 0 R 19 109 0 R 
  20 110 0 R 21 111 0 R 22 112 0 R 23 113 0 R ]
>>
endobj
90 0 obj
<<
/S /D /St 1
>>
endobj
91 0 obj
<<
/S /D /St 2
>>
endobj
92 0 obj
<<
/S /D /St 3
>>
endobj
93 0 obj
<<
/S /D /St 4
>>
endobj
94 0 obj
<<
/S /D /St 5
>>
endobj
95 0 obj
<<
/S /D /St 6
>>
endobj
96 0 obj
<<
/S /D /St 7
>>
endobj
97 0 obj
<<
/S /D /St 8
>>
endobj
98 0 obj
<<
/S /D /St 9
>>
endobj
99 0 obj
<<
/S /D /St 10
>>
endobj
100 0 obj
<<
/S /D /St 11
>>
endobj
101 0 obj
<<
/S /D /St 12
>>
endobj
102 0 obj
<<
/S /D /St 13
>>
endobj
103 0 obj
<<
/S /D /St 14
>>
endobj
104 0 obj
<<
/S /D /St 15
>>
endobj
105 0 obj
<<
/S /D /St 16
>>
endobj
106 0 obj
<<
/S /D /St 17
>>
endobj
107 0 obj
<<
/S /D /St 18
>>
endobj
108 0 obj
<<
/S /D /St 19
>>
endobj
109 0 obj
<<
/S /D /St 20
>>
endobj
110 0 obj
<<
/S /D /St 21
>>
endobj
111 0 obj
<<
/S /D /St 22
>>
endobj
112 0 obj
<<
/S /D /St 23
>>
endobj
113 0 obj
<<
/S /D /St 24
>>
endobj
xref
0 114
0000000000 65535 f 
0000000073 00000 n 
0000000135 00000 n 
0000000242 00000 n 
0000000347 00000 n 
0000000459 00000 n 
0000000629 00000 n 
0000000804 00000 n 
0000000989 00000 n 
0000001163 00000 n 
0000001404 00000 n 
0000001596 00000 n 
0000001795 00000 n 
0000002027 00000 n 
0000002233 00000 n 
0000002349 00000 n 
0000002555 00000 n 
0000002761 00000 n 
0000002967 00000 n 
0000003181 00000 n 
0000003392 00000 n 
0000003624 00000 n 
0000003838 00000 n 
0000004049 00000 n 
0000004281 00000 n 
0000004487 00000 n 
0000004701 00000 n 
0000004912 00000 n 
0000005126 00000 n 
0000005337 00000 n 
0000005583 00000 n 
0000005789 00000 n 
0000005995 00000 n 
0000006209 00000 n 
0000006420 00000 n 
0000006652 00000 n 
0000006866 00000 n 
0000007077 00000 n 
0000007309 00000 n 
0000007515 00000 n 
0000007729 00000 n 
0000007940 00000 n 
0000008154 00000 n 
0000008365 00000 n 
0000008611 00000 n 
0000008817 00000 n 
0000009023 00000 n 
0000009229 00000 n 
0000009443 00000 n 
0000009654 00000 n 
0000009886 00000 n 
0000010092 00000 n 
0000010306 00000 n 
0000010517 00000 n 
0000010749 00000 n 
0000010963 00000 n 
0000011174 00000 n 
0000011406 00000 n 
0000011612 00000 n 
0000011718 00000 n 
0000012007 00000 n 
0000012081 00000 n 
0000012194 00000 n 
0000012330 00000 n 
0000012454 00000 n 
0000012682 00000 n 
0000020694 00000 n 
0000028577 00000 n 
0000036012 00000 n 
0000043792 00000 n 
0000051616 00000 n 
0000059274 00000 n 
0000066975 00000 n 
0000073055 00000 n 
0000081260 00000 n 
0000089137 00000 n 
0000097325 00000 n 
0000106079 00000 n 
0000114328 00000 n 
0000122362 00000 n 
0000130004 00000 n 
0000137166 00000 n 
0000145700 00000 n 
0000153850 00000 n 
0000161911 00000 n 
0000169516 00000 n 
0000174821 00000 n 
0000182936 00000 n 
0000190529 00000 n 
0000194140 00000 n 
0000194428 00000 n 
0000194462 00000 n 
0000194496 00000 n 
0000194530 00000 n 
0000194564 00000 n 
0000194598 00000 n 
0000194632 00000 n 
0000194666 00000 n 
0000194700 00000 n 
0000194734 00000 n 
0000194769 00000 n 
0000194805 00000 n 
0000194841 00000 n 
0000194877 00000 n 
0000194913 00000 n 
0000194949 00000 n 
0000194985 00000 n 
0000195021 00000 n 
0000195057 00000 n 
0000195093 00000 n 
0000195129 00000 n 
0000195165 00000 n 
0000195201 00000 n 
0000195237 00000 n 
trailer
<<
/ID 
[<e1921aa1ba22cd501454e0fd319f89fa><e1921aa1ba22cd501454e0fd319f89fa>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 59 0 R
/Root 58 0 R
/Size 114
>>
startxref
195273
%%EOF
