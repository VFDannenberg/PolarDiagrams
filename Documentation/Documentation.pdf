%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R /F4 15 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 669.0236 115.7029 681.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 651.0236 128.4829 663.0236 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://pypi.org/project/tabulate/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 633.0236 121.2729 645.0236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.scipy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 615.0236 108.4729 627.0236 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R ] /Contents 132 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
10 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.reader)
>> /Border [ 0 0 0 ] /Rect [ 369.1229 724.8661 398.0229 736.8661 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://jieter.github.io/orc-data/site/)
>> /Border [ 0 0 0 ] /Rect [ 228.3029 676.8661 250.5229 688.8661 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://opencpn.org/OpenCPN/plugins/polar.html)
>> /Border [ 0 0 0 ] /Rect [ 279.5329 664.8661 381.7929 676.8661 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/pickle.html#pickle.load)
>> /Border [ 0 0 0 ] /Rect [ 379.9129 412.8661 398.8129 424.8661 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Annots [ 10 0 R 11 0 R 12 0 R 13 0 R ] /Contents 133 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
15 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
16 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/devdocs/reference/constants.html)
>> /Border [ 0 0 0 ] /Rect [ 292.1829 384.0236 315.5129 396.0236 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/devdocs/reference/constants.html)
>> /Border [ 0 0 0 ] /Rect [ 281.0729 354.0236 291.6329 366.0236 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Annots [ 16 0 R 17 0 R ] /Contents 134 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
19 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.bisplrep.html)
>> /Border [ 0 0 0 ] /Rect [ 142.6378 702.0236 177.6478 714.0236 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.bisplev.html#scipy.interpolate.bisplev)
>> /Border [ 0 0 0 ] /Rect [ 199.8878 702.0236 231.0078 714.0236 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Annots [ 19 0 R 20 0 R ] /Contents 135 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
22 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/pickle.html#pickle.dump)
>> /Border [ 0 0 0 ] /Rect [ 389.9029 520.8661 414.9129 532.8661 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Annots [ 22 0 R ] /Contents 136 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
24 0 obj
<<
/Contents 137 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
25 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.writer)
>> /Border [ 0 0 0 ] /Rect [ 161.5929 655.8661 186.0329 667.8661 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Annots [ 25 0 R ] /Contents 138 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
27 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 576.0236 454.6228 588.0236 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 327.3428 468.0236 343.4628 480.0236 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 303.0236 454.6228 315.0236 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 327.3428 195.0236 343.4628 207.0236 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Annots [ 27 0 R 28 0 R 29 0 R 30 0 R ] /Contents 139 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
32 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 666.0236 454.6228 678.0236 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.1228 528.0236 408.4728 540.0236 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 430.7128 528.0236 457.3828 540.0236 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 408.1228 438.0236 446.4628 450.0236 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/legend_api.html#matplotlib.legend.Legend)
>> /Border [ 0 0 0 ] /Rect [ 478.3928 414.0236 511.7528 426.0236 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html#matplotlib-axes-axes-legend)
>> /Border [ 0 0 0 ] /Rect [ 402.4628 336.0236 432.4828 348.0236 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 414.5928 324.0236 450.7128 336.0236 ] /Subtype /Link /Type /Annot
>>
endobj
39 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.0728 192.0236 470.1928 204.0236 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/Annots [ 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R ] /Contents 140 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
41 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 654.0236 455.3429 666.0236 ] /Subtype /Link /Type /Annot
>>
endobj
42 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 516.0236 409.1929 528.0236 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 516.0236 458.1029 528.0236 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 408.8429 426.0236 447.1829 438.0236 ] /Subtype /Link /Type /Annot
>>
endobj
45 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/legend_api.html#matplotlib.legend.Legend)
>> /Border [ 0 0 0 ] /Rect [ 479.1129 402.0236 512.4729 414.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html#matplotlib-axes-axes-legend)
>> /Border [ 0 0 0 ] /Rect [ 403.1829 324.0236 433.2029 336.0236 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 415.3129 312.0236 451.4329 324.0236 ] /Subtype /Link /Type /Annot
>>
endobj
48 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 180.0236 470.9129 192.0236 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/Annots [ 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R 48 0 R ] /Contents 141 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
50 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 715.8661 455.3429 727.8661 ] /Subtype /Link /Type /Annot
>>
endobj
51 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers)
>> /Border [ 0 0 0 ] /Rect [ 302.7329 643.8661 333.8429 655.8661 ] /Subtype /Link /Type /Annot
>>
endobj
52 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 483.8829 577.8661 522.2229 589.8661 ] /Subtype /Link /Type /Annot
>>
endobj
53 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 386.9629 511.8661 423.0829 523.8661 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 346.8661 455.3429 358.8661 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.ConvexHull.html)
>> /Border [ 0 0 0 ] /Rect [ 340.7429 262.8661 391.8629 274.8661 ] /Subtype /Link /Type /Annot
>>
endobj
56 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 202.1729 238.8661 218.2929 250.8661 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/Annots [ 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 56 0 R ] /Contents 142 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
58 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.writer)
>> /Border [ 0 0 0 ] /Rect [ 161.5929 334.8661 186.0329 346.8661 ] /Subtype /Link /Type /Annot
>>
endobj
59 0 obj
<<
/Annots [ 58 0 R ] /Contents 143 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
60 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 732.0236 454.6228 744.0236 ] /Subtype /Link /Type /Annot
>>
endobj
61 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 327.3428 624.0236 343.4628 636.0236 ] /Subtype /Link /Type /Annot
>>
endobj
62 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 459.0236 454.6228 471.0236 ] /Subtype /Link /Type /Annot
>>
endobj
63 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 327.3428 351.0236 343.4628 363.0236 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 150.0236 454.6228 162.0236 ] /Subtype /Link /Type /Annot
>>
endobj
65 0 obj
<<
/Annots [ 60 0 R 61 0 R 62 0 R 63 0 R 64 0 R ] /Contents 144 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
66 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.1228 666.0236 408.4728 678.0236 ] /Subtype /Link /Type /Annot
>>
endobj
67 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 430.7128 666.0236 457.3828 678.0236 ] /Subtype /Link /Type /Annot
>>
endobj
68 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 408.1228 576.0236 446.4628 588.0236 ] /Subtype /Link /Type /Annot
>>
endobj
69 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/legend_api.html#matplotlib.legend.Legend)
>> /Border [ 0 0 0 ] /Rect [ 478.3928 552.0236 511.7528 564.0236 ] /Subtype /Link /Type /Annot
>>
endobj
70 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html#matplotlib-axes-axes-legend)
>> /Border [ 0 0 0 ] /Rect [ 402.4628 474.0236 432.4828 486.0236 ] /Subtype /Link /Type /Annot
>>
endobj
71 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 414.5928 462.0236 450.7128 474.0236 ] /Subtype /Link /Type /Annot
>>
endobj
72 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.0728 330.0236 470.1928 342.0236 ] /Subtype /Link /Type /Annot
>>
endobj
73 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 438.5028 129.0236 454.6228 141.0236 ] /Subtype /Link /Type /Annot
>>
endobj
74 0 obj
<<
/Annots [ 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R 72 0 R 73 0 R ] /Contents 145 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
75 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 380.8429 642.0236 409.1929 654.0236 ] /Subtype /Link /Type /Annot
>>
endobj
76 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 431.4329 642.0236 458.1029 654.0236 ] /Subtype /Link /Type /Annot
>>
endobj
77 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 408.8429 552.0236 447.1829 564.0236 ] /Subtype /Link /Type /Annot
>>
endobj
78 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/legend_api.html#matplotlib.legend.Legend)
>> /Border [ 0 0 0 ] /Rect [ 479.1129 528.0236 512.4729 540.0236 ] /Subtype /Link /Type /Annot
>>
endobj
79 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html#matplotlib-axes-axes-legend)
>> /Border [ 0 0 0 ] /Rect [ 403.1829 450.0236 433.2029 462.0236 ] /Subtype /Link /Type /Annot
>>
endobj
80 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 415.3129 438.0236 451.4329 450.0236 ] /Subtype /Link /Type /Annot
>>
endobj
81 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 454.7929 306.0236 470.9129 318.0236 ] /Subtype /Link /Type /Annot
>>
endobj
82 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 112.8661 455.3429 124.8661 ] /Subtype /Link /Type /Annot
>>
endobj
83 0 obj
<<
/Annots [ 75 0 R 76 0 R 77 0 R 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R ] /Contents 146 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
84 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers)
>> /Border [ 0 0 0 ] /Rect [ 299.6128 760.8661 330.7228 772.8661 ] /Subtype /Link /Type /Annot
>>
endobj
85 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 480.7628 694.8661 519.1028 706.8661 ] /Subtype /Link /Type /Annot
>>
endobj
86 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 383.8428 628.8661 419.9628 640.8661 ] /Subtype /Link /Type /Annot
>>
endobj
87 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 436.1028 463.8661 452.2228 475.8661 ] /Subtype /Link /Type /Annot
>>
endobj
88 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.ConvexHull.html)
>> /Border [ 0 0 0 ] /Rect [ 337.6228 379.8661 388.7428 391.8661 ] /Subtype /Link /Type /Annot
>>
endobj
89 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 199.0528 355.8661 215.1728 367.8661 ] /Subtype /Link /Type /Annot
>>
endobj
90 0 obj
<<
/Annots [ 84 0 R 85 0 R 86 0 R 87 0 R 88 0 R 89 0 R ] /Contents 147 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
91 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.python.org/3/library/csv.html#csv.writer)
>> /Border [ 0 0 0 ] /Rect [ 161.5929 570.0236 186.0329 582.0236 ] /Subtype /Link /Type /Annot
>>
endobj
92 0 obj
<<
/Annots [ 91 0 R ] /Contents 148 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
93 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 411.5028 732.0236 427.6228 744.0236 ] /Subtype /Link /Type /Annot
>>
endobj
94 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 411.5028 489.0236 427.6228 501.0236 ] /Subtype /Link /Type /Annot
>>
endobj
95 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 300.3428 381.0236 316.4628 393.0236 ] /Subtype /Link /Type /Annot
>>
endobj
96 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 411.5028 192.0236 427.6228 204.0236 ] /Subtype /Link /Type /Annot
>>
endobj
97 0 obj
<<
/Annots [ 93 0 R 94 0 R 95 0 R 96 0 R ] /Contents 149 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
98 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 353.1228 714.0236 381.4728 726.0236 ] /Subtype /Link /Type /Annot
>>
endobj
99 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 403.7128 714.0236 430.3828 726.0236 ] /Subtype /Link /Type /Annot
>>
endobj
100 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 381.1228 624.0236 419.4628 636.0236 ] /Subtype /Link /Type /Annot
>>
endobj
101 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/legend_api.html#matplotlib.legend.Legend)
>> /Border [ 0 0 0 ] /Rect [ 451.3928 600.0236 484.7528 612.0236 ] /Subtype /Link /Type /Annot
>>
endobj
102 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html#matplotlib-axes-axes-legend)
>> /Border [ 0 0 0 ] /Rect [ 375.4628 522.0236 405.4828 534.0236 ] /Subtype /Link /Type /Annot
>>
endobj
103 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 387.5928 510.0236 423.7128 522.0236 ] /Subtype /Link /Type /Annot
>>
endobj
104 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 427.0728 378.0236 443.1928 390.0236 ] /Subtype /Link /Type /Annot
>>
endobj
105 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 411.5028 189.0236 427.6228 201.0236 ] /Subtype /Link /Type /Annot
>>
endobj
106 0 obj
<<
/Annots [ 98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 105 0 R ] /Contents 150 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
107 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.to_rgb.html#matplotlib.colors.to_rgb)
>> /Border [ 0 0 0 ] /Rect [ 371.0578 702.0236 399.4078 714.0236 ] /Subtype /Link /Type /Annot
>>
endobj
108 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colors_api.html)
>> /Border [ 0 0 0 ] /Rect [ 421.6478 702.0236 448.3178 714.0236 ] /Subtype /Link /Type /Annot
>>
endobj
109 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 399.0578 612.0236 437.3978 624.0236 ] /Subtype /Link /Type /Annot
>>
endobj
110 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/legend_api.html#matplotlib.legend.Legend)
>> /Border [ 0 0 0 ] /Rect [ 469.3278 588.0236 502.6878 600.0236 ] /Subtype /Link /Type /Annot
>>
endobj
111 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html#matplotlib-axes-axes-legend)
>> /Border [ 0 0 0 ] /Rect [ 393.3978 510.0236 423.4178 522.0236 ] /Subtype /Link /Type /Annot
>>
endobj
112 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 405.5278 498.0236 441.6478 510.0236 ] /Subtype /Link /Type /Annot
>>
endobj
113 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 445.0078 366.0236 461.1278 378.0236 ] /Subtype /Link /Type /Annot
>>
endobj
114 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 429.4378 226.8661 445.5578 238.8661 ] /Subtype /Link /Type /Annot
>>
endobj
115 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/markers_api.html#module-matplotlib.markers)
>> /Border [ 0 0 0 ] /Rect [ 292.9478 154.8661 324.0578 166.8661 ] /Subtype /Link /Type /Annot
>>
endobj
116 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/colorbar_api.html#matplotlib.colorbar.Colorbar)
>> /Border [ 0 0 0 ] /Rect [ 172.9078 76.86614 211.2478 88.86614 ] /Subtype /Link /Type /Annot
>>
endobj
117 0 obj
<<
/Annots [ 107 0 R 108 0 R 109 0 R 110 0 R 111 0 R 112 0 R 113 0 R 114 0 R 115 0 R 116 0 R ] /Contents 151 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
118 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.colorbar.html)
>> /Border [ 0 0 0 ] /Rect [ 386.9629 589.8661 423.0829 601.8661 ] /Subtype /Link /Type /Annot
>>
endobj
119 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.gca.html)
>> /Border [ 0 0 0 ] /Rect [ 439.2229 424.8661 455.3429 436.8661 ] /Subtype /Link /Type /Annot
>>
endobj
120 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.ConvexHull.html)
>> /Border [ 0 0 0 ] /Rect [ 340.7429 340.8661 391.8629 352.8661 ] /Subtype /Link /Type /Annot
>>
endobj
121 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html)
>> /Border [ 0 0 0 ] /Rect [ 202.1729 316.8661 218.2929 328.8661 ] /Subtype /Link /Type /Annot
>>
endobj
122 0 obj
<<
/Annots [ 118 0 R 119 0 R 120 0 R 121 0 R ] /Contents 152 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
123 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/doc/stable/reference/generated/numpy.std.html)
>> /Border [ 0 0 0 ] /Rect [ 212.7329 564.0236 226.0729 576.0236 ] /Subtype /Link /Type /Annot
>>
endobj
124 0 obj
<<
/Annots [ 123 0 R ] /Contents 153 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 131 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
125 0 obj
<<
/Outlines 127 0 R /PageLabels 154 0 R /PageMode /UseNone /Pages 131 0 R /Type /Catalog
>>
endobj
126 0 obj
<<
/Author () /CreationDate (D:20210430165030-01'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20210430165030-01'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (hrosailing-Module Documentation) /Trapped /False
>>
endobj
127 0 obj
<<
/Count 3 /First 128 0 R /Last 130 0 R /Type /Outlines
>>
endobj
128 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 729.0236 0 ] /Next 129 0 R /Parent 127 0 R /Title (Dependencies)
>>
endobj
129 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 606.0236 0 ] /Next 130 0 R /Parent 127 0 R /Prev 128 0 R /Title (How To Use This Module)
>>
endobj
130 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 474.6236 0 ] /Parent 127 0 R /Prev 129 0 R /Title (Contents Of This Module)
>>
endobj
131 0 obj
<<
/Count 22 /Kids [ 9 0 R 14 0 R 18 0 R 21 0 R 23 0 R 24 0 R 26 0 R 31 0 R 40 0 R 49 0 R 
  57 0 R 59 0 R 65 0 R 74 0 R 83 0 R 90 0 R 92 0 R 97 0 R 106 0 R 117 0 R 
  122 0 R 124 0 R ] /Type /Pages
>>
endobj
132 0 obj
<<
/Length 8110
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 61.05488 0 Td 24 TL /F2 20 Tf 0 0 0 rg (hrosailing) Tj /F3 20 Tf (-Module Documentation) Tj T* -61.05488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module has the following third-party dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 672.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (numpy) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 666.0236 cm
Q
q
1 0 0 1 62.69291 654.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (matplotlib) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
Q
q
1 0 0 1 62.69291 636.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (tabulate) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 630.0236 cm
Q
q
1 0 0 1 62.69291 618.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (scipy) Tj  T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
Q
q
1 0 0 1 62.69291 585.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (How To Use This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 567.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (After installing/downloading one can easily use the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module via) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 62.69291 535.8236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( import hrosailing) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 535.8236 cm
Q
q
1 0 0 1 62.69291 517.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 511.8236 cm
Q
q
1 0 0 1 62.69291 486.6236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( from hrosailing import something) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 486.6236 cm
Q
q
1 0 0 1 62.69291 453.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Contents Of This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 435.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module defines the following public functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 429.6236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 346.7575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 340.7575 cm
Q
q
1 0 0 1 20 229.7575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 68 Tm  T* ET
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv-file is located or where a new .csv-file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be written to the .csv-file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the .) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (-function of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 229.7575 cm
Q
q
1 0 0 1 20 211.7575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (from_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (fmt='hro',) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 205.7575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 187.7575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 174.7575 Tm  T* ET
q
1 0 0 1 20 172.7575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 166.7575 cm
Q
q
1 0 0 1 20 148.7575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file which you want to be read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 148.7575 cm
Q
q
1 0 0 1 20 130.7575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (fmt) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 124.7575 cm
Q
q
1 0 0 1 20 94.75748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file. Currently supported formats are:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('hro') Tj /F1 10 Tf (, ) Tj /F2 10 Tf ('orc') Tj /F1 10 Tf (, ) Tj /F2 10 Tf ('opencpn') Tj /F1 10 Tf (, ) Tj /F2 10 Tf ('array') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 94.75748 cm
Q
q
1 0 0 1 20 76.75748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 70.75748 cm
Q
q
1 0 0 1 20 28.75748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the occuring wind speeds are true wind.) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will be passed to the constructor of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instance) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 28.75748 cm
Q
q
1 0 0 1 20 10.75748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 4.75748 cm
Q
q
1 0 0 1 20 -13.24252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the occuring wind angles are true wind) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
133 0 obj
<<
/Length 9767
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 576 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 14 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will be passed to the constructor of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (instance) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates an ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance from the data that) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (is written in the given .csv file via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (reader) Tj /F1 10 Tf (-class, see ) Tj 0 0 .501961 rg (reader) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The .csv file needs to adhere to the format specified by the parameter ) Tj /F2 10 Tf (fmt) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('hro') Tj /F1 10 Tf (: The format created by the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('orc') Tj /F1 10 Tf (: The format found at ) Tj 0 0 .501961 rg (ORC) Tj 0 0 0 rg ( \(without beat and run angles\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('opencpn') Tj /F1 10 Tf (: The format created by the ) Tj 0 0 .501961 rg (OpenCPN Polar Plugin) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ('array') Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 576 cm
Q
q
1 0 0 1 20 558 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 552 cm
Q
q
1 0 0 1 20 441 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 99 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 68 Tm  T* ET
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .pkl file or where the created .pkl file will be located) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance which will be written to the .pkl file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the .) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (-function of the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance.) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 441 cm
Q
q
1 0 0 1 20 423 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (depickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 417 cm
Q
q
1 0 0 1 20 336 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .pkl file which is to be read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates an ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( instance from the data that is) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (written in the given .pkl file, via the ) Tj /F2 10 Tf (pickle) Tj /F1 10 Tf (.) Tj /F3 10 Tf (load) Tj /F1 10 Tf (-function, see ) Tj 0 0 .501961 rg (load) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 336 cm
Q
q
1 0 0 1 20 318 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (convert) Tj /F1 10 Tf (\() Tj /F2 10 Tf (obj,) Tj ( ) Tj (convert_type) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 177 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 68 Tm  T* ET
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An instance of a subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (convert_type) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Converts ) Tj /F2 10 Tf (obj) Tj /F1 10 Tf ( to an instance of ) Tj /F2 10 Tf (convert_type) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Currently only works with the subclasses ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 177 cm
Q
q
1 0 0 1 20 159 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetric_polar_diagram) Tj /F1 10 Tf (\(obj\)) Tj T* ET
Q
Q
q
1 0 0 1 20 153 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An instance of a subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Symmetrizes a given instance of a subclass of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (I.E. for every tuple of \(wind speed, wind angle, boat speed\) that is contained in ) Tj /F2 10 Tf (obj) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in some form, the function creates a new instance of the same subclass of) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (, such that the tuples \(wind speed, wind angle, boat speed\)) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and \(wind speed, 360 - wind angle, boat speed\) are containted within it in some form.) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Currently only works for the subclasses ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( and) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
134 0 obj
<<
/Length 8089
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 670.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Should only be used for instances of ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( if the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed resolution ranges from 0 to 180 or 180 to 360 to avoid conflicting data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 670.1575 cm
Q
q
1 0 0 1 20 652.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (filter_points) Tj /F1 10 Tf (\() Tj /F2 10 Tf (w_points,) Tj ( ) Tj (f_func=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 634.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f_mode='bound',) Tj ( ) Tj (**filter_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 628.1575 cm
Q
q
1 0 0 1 20 205.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 411 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 356 Tm  T* ET
q
1 0 0 1 20 354 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (w_points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (WeightedPoints) Tj T* ET
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 318 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 318 cm
Q
q
1 0 0 1 20 300 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f_func) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj T* ET
Q
Q
q
1 0 0 1 20 294 cm
Q
q
1 0 0 1 20 252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Function, that will determine which) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (points will be filtered out, depending) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (on a given weight.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 234 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f_mode) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (str) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Filtering-method if no ) Tj /F2 10 Tf (f_func) Tj /F1 10 Tf ( is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Currently the two available methods are) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (bound) Tj /F1 10 Tf ( where the points are filtered by) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a given upper and lower bound and) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (percentage) Tj /F1 10 Tf ( where the points are filtered) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (according to an empirical percentile.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (filter_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Either possible keyword arguments of ) Tj /F2 10 Tf (f_func) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or the following:) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (l_b) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (int/float) Tj /F1 10 Tf (\) - sets the lower bound for ) Tj /F2 10 Tf (f_mode) Tj /F1 10 Tf ( ) Tj /F4 10 Tf (bound) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (defaults to ) Tj /F2 10 Tf (numpy) Tj /F1 10 Tf (.) Tj /F3 10 Tf (NINF) Tj /F1 10 Tf (, see ) Tj 0 0 .501961 rg (NINF) Tj  T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (u_b) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (int/float) Tj /F1 10 Tf (\) - sets the upper bound for ) Tj /F2 10 Tf (f_mode) Tj /F1 10 Tf ( ) Tj /F4 10 Tf (bound) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (defaults to ) Tj /F2 10 Tf (numpy) Tj /F1 10 Tf (.) Tj /F3 10 Tf (inf) Tj /F1 10 Tf (, see ) Tj 0 0 .501961 rg (inf) Tj  T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (percent) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (int/float) Tj /F1 10 Tf (\) - determines empirical percentile for) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f_mode) Tj /F1 10 Tf ( ) Tj /F4 10 Tf (percentage) Tj /F1 10 Tf (, defaults to ) Tj /F4 10 Tf (50) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 205.1575 cm
Q
q
1 0 0 1 20 187.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (interpolate_points) Tj /F1 10 Tf (\() Tj /F2 10 Tf (points,) Tj ( ) Tj (w_res=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 169.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (i_func=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 163.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 145.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 132.1575 Tm  T* ET
q
1 0 0 1 20 130.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape \(_, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 124.1575 cm
Q
q
1 0 0 1 20 94.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 94.15748 cm
Q
q
1 0 0 1 20 76.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (w_res) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2 or ) Tj /F2 10 Tf (str) Tj /F1 10 Tf ( ) Tj /F4 10 Tf ("auto") Tj T* ET
Q
Q
q
1 0 0 1 20 70.15748 cm
Q
q
1 0 0 1 20 40.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 40.15748 cm
Q
q
1 0 0 1 20 22.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (i_func) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj T* ET
Q
Q
q
1 0 0 1 20 16.15748 cm
Q
q
1 0 0 1 20 -13.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Function to interpolate ) Tj /F2 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If no function is passed, the default method) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
135 0 obj
<<
/Length 8530
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.6378 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 583.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of interpolation uses the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.interpolate) Tj /F1 10 Tf (.) Tj /F3 10 Tf (bisplrep) Tj /F1 10 Tf ( and) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.interpolate) Tj /F1 10 Tf (.) Tj /F3 10 Tf (bisplev) Tj /F1 10 Tf ( functions, see) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (bisplrep) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (bisplev) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 583.1575 cm
Q
q
1 0 0 1 20 565.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (create_polar_diagram) Tj /F1 10 Tf (\() Tj /F2 10 Tf (data,) Tj T* ET
Q
Q
q
1 0 0 1 20 547.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (p_type=PolarDiagramTable,) Tj ( ) Tj (w_func=None,) Tj ( ) Tj (f_func=None,) Tj ( ) Tj (i_func=None,) Tj ( ) Tj (w_res=No) Tj (ne) Tj T* ET
Q
Q
q
1 0 0 1 20 529.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws=True,) Tj ( ) Tj (twa=True,) Tj ( ) Tj (w_func_kw=None,) Tj ( ) Tj (**filter_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 523.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 505.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 492.1575 Tm  T* ET
q
1 0 0 1 20 490.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (data) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape \(_, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 484.1575 cm
Q
q
1 0 0 1 20 454.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 454.1575 cm
Q
q
1 0 0 1 20 436.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (p_type) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 430.1575 cm
Q
q
1 0 0 1 20 412.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( subclass) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 412.1575 cm
Q
q
1 0 0 1 20 394.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 388.1575 cm
Q
q
1 0 0 1 20 346.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the wind speeds in) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (data) Tj /F1 10 Tf ( are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, they will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 346.1575 cm
Q
q
1 0 0 1 20 328.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 322.1575 cm
Q
q
1 0 0 1 20 280.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the wind angles in) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (data) Tj /F1 10 Tf ( are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, they will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 280.1575 cm
Q
q
1 0 0 1 20 262.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (w_func) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 256.1575 cm
Q
q
1 0 0 1 20 226.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Weight-Function passed on to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (WeightedPoints) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 226.1575 cm
Q
q
1 0 0 1 20 208.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f_func) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 202.1575 cm
Q
q
1 0 0 1 20 172.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Filter-Function passed on to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (filter_points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 172.1575 cm
Q
q
1 0 0 1 20 154.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (i_func) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 148.1575 cm
Q
q
1 0 0 1 20 118.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Interpolating-Function passed on to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (interpolate_points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 118.1575 cm
Q
q
1 0 0 1 20 100.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (w_res) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2 or ) Tj /F2 10 Tf (str) Tj /F1 10 Tf ( ) Tj /F4 10 Tf ("auto") Tj /F1 10 Tf ( , optional) Tj T* ET
Q
Q
q
1 0 0 1 20 94.15748 cm
Q
q
1 0 0 1 20 40.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Only needed, if ) Tj /F2 10 Tf (p_type) Tj /F1 10 Tf ( is PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Tuple containing the wind speed resolution and) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle resolution for the created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramTable instance) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 40.15748 cm
Q
q
1 0 0 1 20 22.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (w_func_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj T* ET
Q
Q
q
1 0 0 1 20 16.15748 cm
Q
q
1 0 0 1 20 -13.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments passed on to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (WeightedPoints) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 -13.84252 cm
Q
q
1 0 0 1 20 -31.84252 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (filter_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 -37.84252 cm
Q
q
1 0 0 1 20 -55.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments passed on to) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
136 0 obj
<<
/Length 9316
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 708.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (filter_points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module defines the following public classes:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 591 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 585 cm
Q
q
1 0 0 1 20 252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 327 cm
Q
q
1 0 0 1 20 315 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An abstract base class for most classes in the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module) Tj T* ET
Q
Q
q
1 0 0 1 20 315 cm
Q
q
1 0 0 1 20 309 cm
Q
q
1 0 0 1 20 297 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 297 cm
Q
q
1 0 0 1 20 291 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 87 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 81 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .pkl file or where the created .pkl file will be located) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates or overwrites a .pkl file, with the class data of the instance which) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (called the function, via the ) Tj /F2 10 Tf (pickle) Tj /F1 10 Tf (.) Tj /F3 10 Tf (dump) Tj /F1 10 Tf (-function, see ) Tj 0 0 .501961 rg (dump) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf ( class also defines the following abstract methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 14 Tm 20.21488 Tw 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj /F1 10 Tf  T* 0 Tw /F2 10 Tf (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 234 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_res=None,) Tj ( ) Tj (wa_res=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (data=None,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 204 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar performance diagram in form of a table) Tj T* ET
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (ws_res) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (wa_res) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (can either be an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( \(of ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( values\), ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It determines the number of columns \(resp. rows\) the Table will have) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( is passed, the number of columns \(resp. rows\) will be the same) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (as the number of elements in the ) Tj /F2 10 Tf (Iterable) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If an ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( is passed, the number of columns \(resp. rows\) will be the number of) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (elements in numpy.arange\() Tj /F2 10 Tf (ws_res) Tj /F1 10 Tf (, 40, ) Tj /F2 10 Tf (ws_res) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (\(resp. numpy.arange\() Tj /F2 10 Tf (wa_res) Tj /F1 10 Tf (, 360, ) Tj /F2 10 Tf (wa_res) Tj /F1 10 Tf (\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If a ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( is passed, the number of columns \(resp. rows\) will be the number of) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements in numpy.linspace\(``\)) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (\(resp. numpy.linspace\(``\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If no custom ) Tj /F2 10 Tf (ws_res) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (wa_res) Tj /F1 10 Tf (\) is passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to numpy.arange\(2,42,2\) \(resp. numpy.arange\(0, 360, 5\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) is a ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf ( that specifies wether the wind speeds) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
137 0 obj
<<
/Length 6408
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 507 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj /F2 10 Tf (ws_res) Tj /F1 10 Tf ( \(resp. the wind angles in ) Tj /F2 10 Tf (wa_res) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 495 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 483 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) is set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the wind speeds \(resp. wind angles\)) Tj T* ET
Q
Q
q
1 0 0 1 20 471 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 471 cm
Q
q
1 0 0 1 20 465 cm
Q
q
1 0 0 1 20 453 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (data) Tj /F1 10 Tf ( is a ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of matching shape that contains the) Tj T* ET
Q
Q
q
1 0 0 1 20 441 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (boat speeds matching the wind speeds and angles in the resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 429 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If no custom ) Tj /F2 10 Tf (data) Tj /F1 10 Tf ( is passed, it will default to numpy.zeros\() Tj /F2 10 Tf (\(rdim,) Tj ( ) Tj (cdim\)) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 417 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (where rdim and cdim are number of rows and columns respectively, determined by) Tj T* ET
Q
Q
q
1 0 0 1 20 405 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa_res) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_res) Tj T* ET
Q
Q
q
1 0 0 1 20 405 cm
Q
q
1 0 0 1 20 387 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 1 0 0 rg (|) Tj 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( class has the following \(private\) attriubutes:) Tj T* ET
Q
Q
q
1 0 0 1 20 381 cm
Q
q
1 0 0 1 20 327 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_resolution_wind_speed) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_resolution_wind_angle) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 327 cm
Q
q
1 0 0 1 20 321 cm
Q
q
1 0 0 1 20 309 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( class defines the following dunder methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 309 cm
Q
q
1 0 0 1 20 303 cm
Q
q
1 0 0 1 20 168 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 123 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__str__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 105 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__repr__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 87 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__getitem__) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_tup) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 81 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_tup) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Tuple to specify the row and column entry of the table, given as) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements of the wind angle and wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns specified entry of the table) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 150 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_resolution_wind_speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_resolution_wind_angle) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
138 0 obj
<<
/Length 8079
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 447 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 213 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 174 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file or where the created .csv file will be located) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates or overwrites a .csv file with the class data of object) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (which called the function via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (writer) Tj /F1 10 Tf (-class,) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (see ) Tj 0 0 .501961 rg (writer) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file will be as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind speed resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind angle resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Boat speeds:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with the delimiter being ','.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 447 cm
Q
q
1 0 0 1 20 429 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (change_entries) Tj /F1 10 Tf (\() Tj /F2 10 Tf (new_data,) Tj ( ) Tj (ws=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 411 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa=None,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 405 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 393 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 362 Tm  T* ET
q
1 0 0 1 20 360 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_data) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (float) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of matching shape) Tj T* ET
Q
Q
q
1 0 0 1 20 354 cm
Q
q
1 0 0 1 20 312 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New data that will be written in the specified entries) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If no ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( and no ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( is passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the required shape is the shape of ) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 294 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 288 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Column entries where the data is to be changed, given by elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (None) Tj /F1 10 Tf ( is passed, the function changes all entries in the rows) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (specified by ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( is also ) Tj /F2 10 Tf (None) Tj /F1 10 Tf (, the function changes all) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (entries in the table) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Row entries where the data is to be changed, given by elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the wind angle resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (None) Tj /F1 10 Tf ( is passed, the function changes all entries in the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (columns specified by ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is also ) Tj /F2 10 Tf (None) Tj /F1 10 Tf (, the function changes all) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (entries in the table) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not wind_speeds is to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not wind_angles is to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Changes the data in the specified entries in the table to the input new data.) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
139 0 obj
<<
/Length 8814
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 664.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (This function alters ) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 664.1575 cm
Q
q
1 0 0 1 20 646.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 640.1575 cm
Q
q
1 0 0 1 20 391.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram that is to be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (given as an element of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 391.1575 cm
Q
q
1 0 0 1 20 373.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 367.1575 cm
Q
q
1 0 0 1 20 118.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram that is to be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (given as an element of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 118.1575 cm
Q
q
1 0 0 1 20 100.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (ws_range=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 82.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 76.15748 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The range of wind speeds to be plotted, given as an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
140 0 obj
<<
/Length 8795
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 115.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 506 Tm  T* ET
q
1 0 0 1 20 504 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 498 cm
Q
q
1 0 0 1 20 444 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 444 cm
Q
q
1 0 0 1 20 426 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 420 cm
Q
q
1 0 0 1 20 306 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 306 cm
Q
q
1 0 0 1 20 288 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the amount of slices and colors.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( is of length 2 and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is of length) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (greater 2, the legend will be a) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( are of the same length,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the legend will be a ) Tj /F2 10 Tf (matplotlib.legend.) Tj /F3 10 Tf (Legend) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to change the appearence and location of the) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.) Tj /F3 10 Tf (legend) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded polar plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 115.1575 cm
Q
q
1 0 0 1 20 97.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (ws_range=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 79.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 73.15748 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The range of wind speeds to be plotted, given as an ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (elements of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
141 0 obj
<<
/Length 8625
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 103.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 506 Tm  T* ET
q
1 0 0 1 20 504 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 498 cm
Q
q
1 0 0 1 20 444 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 444 cm
Q
q
1 0 0 1 20 426 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 420 cm
Q
q
1 0 0 1 20 306 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 306 cm
Q
q
1 0 0 1 20 288 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the amount of slices and colors.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( is of length 2 and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is of length) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (greater 2, the legend will be a) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( are of the same length,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the legend will be a ) Tj /F2 10 Tf (matplotlib.legend.) Tj /F3 10 Tf (Legend) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to change the appearence and location of the) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.) Tj /F3 10 Tf (legend) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded cartesian plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 103.1575 cm
Q
q
1 0 0 1 20 85.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red') Tj (\),) Tj T* ET
Q
Q
q
1 0 0 1 20 67.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (*legend_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 61.15748 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 43.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 30.15748 Tm  T* ET
q
1 0 0 1 20 28.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 22.15748 cm
Q
q
1 0 0 1 20 4.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
142 0 obj
<<
/Length 8936
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 230 Tm  T* ET
q
1 0 0 1 20 204 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 204 cm
Q
q
1 0 0 1 20 186 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyle) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the style of the markers in the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For all possible styles, see ) Tj 0 0 .501961 rg (marker) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 14 Tm 1.37816 Tw 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence and position of the) Tj T* 0 Tw (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 273 cm
Q
q
1 0 0 1 20 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 249 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 170 Tm  T* ET
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram that is to be plotted, given as an element) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of the wind speed resolution) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram table, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.spatial) Tj /F1 10 Tf (.) Tj /F3 10 Tf (ConvexHull) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (ConvexHull) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then creates a polar plot of the convex hull, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf (\() Tj /F2 10 Tf (f,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (radians=False,) Tj ( ) Tj (*params) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar performance diagram given) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as a fitted curve with a list of optimal parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (f) Tj /F1 10 Tf ( should be a function of the form ) Tj /F2 10 Tf (f\(x,) Tj ( ) Tj (*params\)) Tj /F1 10 Tf (, where ) Tj /F2 10 Tf (x) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (should be ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape\(_, 2\) \(the rows should correspond to pairs of) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speeds and wind angles\), and determines the curve which describes the polar diagram.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (radians) Tj /F1 10 Tf ( is ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf ( that specifies, wether ) Tj /F2 10 Tf (f) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (takes the wind angles to be in radians or degrees) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (*params) Tj /F1 10 Tf ( should contain the resulting parameters) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
143 0 obj
<<
/Length 9004
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 700.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (that are obtained via a fitting of ) Tj /F2 10 Tf (f) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 700.1575 cm
Q
q
1 0 0 1 20 694.1575 cm
Q
q
1 0 0 1 20 682.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf ( class has the following \(private\) attributes:) Tj T* ET
Q
Q
q
1 0 0 1 20 682.1575 cm
Q
q
1 0 0 1 20 676.1575 cm
Q
q
1 0 0 1 20 630 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_f) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_radians) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_params) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 630 cm
Q
q
1 0 0 1 20 624 cm
Q
q
1 0 0 1 20 612 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf ( class defines the following dunder methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 612 cm
Q
q
1 0 0 1 20 606 cm
Q
q
1 0 0 1 20 495 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 99 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__repr__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 81 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__call__) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (wa) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 75 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 20 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj /F1 10 Tf ( with the specified values) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( should be of matching shape and type) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 495 cm
Q
q
1 0 0 1 20 489 cm
Q
q
1 0 0 1 20 477 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 477 cm
Q
q
1 0 0 1 20 471 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 483 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj T* ET
Q
Q
q
1 0 0 1 20 477 cm
Q
q
1 0 0 1 20 459 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_f) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 459 cm
Q
q
1 0 0 1 20 441 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 435 cm
Q
q
1 0 0 1 20 417 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 417 cm
Q
q
1 0 0 1 20 399 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 393 cm
Q
q
1 0 0 1 20 375 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_params) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 375 cm
Q
q
1 0 0 1 20 357 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 351 cm
Q
q
1 0 0 1 20 162 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file or where the created .csv file will be located) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates or overwrites a .csv file with the class data of object) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (which called the function via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (writer) Tj /F1 10 Tf (-class,) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (see ) Tj 0 0 .501961 rg (writer) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file will be as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Function: self.curve) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Radians: self.radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Parameters: self.parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with the delimiter ':') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 107 Tm  T* ET
q
1 0 0 1 20 105 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 99 cm
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (given as the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 69 cm
Q
q
1 0 0 1 20 51 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 45 cm
Q
q
1 0 0 1 20 -9 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 15.11247 Tw 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a) Tj T* 0 Tw /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
144 0 obj
<<
/Length 8761
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 547.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 80 Tm  T* ET
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 547.1575 cm
Q
q
1 0 0 1 20 529.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 523.1575 cm
Q
q
1 0 0 1 20 274.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (given as the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 274.1575 cm
Q
q
1 0 0 1 20 256.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range=\(0,20,5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 238.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 232.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 214.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 201.1575 Tm  T* ET
q
1 0 0 1 20 199.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 193.1575 cm
Q
q
1 0 0 1 20 151.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (given as a lower and upper bound of the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed aswell as the amount of slices) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 151.1575 cm
Q
q
1 0 0 1 20 133.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 127.1575 cm
Q
q
1 0 0 1 20 73.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 73.15748 cm
Q
q
1 0 0 1 20 55.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 49.15748 cm
Q
q
1 0 0 1 20 7.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
145 0 obj
<<
/Length 8906
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 61.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 253.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 368 Tm  T* ET
q
1 0 0 1 20 306 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 306 cm
Q
q
1 0 0 1 20 288 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the amount of slices and colors.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( is of length 2 and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is of length) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (greater 2, the legend will be a) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( are of the same length,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the legend will be a ) Tj /F2 10 Tf (matplotlib.legend.) Tj /F3 10 Tf (Legend) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to change the appearence and location of the) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.) Tj /F3 10 Tf (legend) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded polar plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, vie the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 253.1575 cm
Q
q
1 0 0 1 20 235.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range=\(0,20,5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 217.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot) Tj (_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 211.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 193.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 180.1575 Tm  T* ET
q
1 0 0 1 20 178.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2 , optional) Tj T* ET
Q
Q
q
1 0 0 1 20 172.1575 cm
Q
q
1 0 0 1 20 130.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted,) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (given as a lower and upper bound of the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed aswell as the amount of slices) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 130.1575 cm
Q
q
1 0 0 1 20 112.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 106.1575 cm
Q
q
1 0 0 1 20 52.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 52.15748 cm
Q
q
1 0 0 1 20 34.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 28.15748 cm
Q
q
1 0 0 1 20 -1.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
146 0 obj
<<
/Length 8631
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 229.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 380 Tm  T* ET
q
1 0 0 1 20 306 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 306 cm
Q
q
1 0 0 1 20 288 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the amount of slices and colors.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( is of length 2 and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is of length) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (greater 2, the legend will be a) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( are of the same length,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the legend will be a ) Tj /F2 10 Tf (matplotlib.legend.) Tj /F3 10 Tf (Legend) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to change the appearence and location of the) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.) Tj /F3 10 Tf (legend) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded cartesian plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 229.1575 cm
Q
q
1 0 0 1 20 211.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range=\(0,20\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 193.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (**legend_) Tj (kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 187.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 152 Tm  T* ET
q
1 0 0 1 20 150 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 96 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optinal) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyle) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
147 0 obj
<<
/Length 10118
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 59.5728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 279 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 111.1575 Tm  T* ET
q
1 0 0 1 20 151.1575 cm
Q
q
1 0 0 1 20 120 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the style of the markers in the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For all possible styles, see ) Tj 0 0 .501961 rg (marker) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 14 Tm 1.945455 Tw 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence and position of the) Tj T* 0 Tw (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 273 cm
Q
q
1 0 0 1 20 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 249 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 170 Tm  T* ET
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram table, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.spatial) Tj /F1 10 Tf (.) Tj /F3 10 Tf (ConvexHull) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (ConvexHull) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then creates a polar plot of the convex hull, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 279 cm
Q
q
1 0 0 1 20 261 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf (\() Tj /F2 10 Tf (points=None,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=Tr) Tj (ue) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 255 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 309 cm
Q
q
1 0 0 1 20 297 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to present, visualize and work with a polar performance diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 285 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in form of a point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 285 cm
Q
q
1 0 0 1 20 279 cm
Q
q
1 0 0 1 20 267 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (points) Tj /F1 10 Tf ( should be ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape \(_, 3\) and determines) Tj T* ET
Q
Q
q
1 0 0 1 20 255 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the points that are in the point cloud at the beginning) Tj T* ET
Q
Q
q
1 0 0 1 20 243 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A point should be of length 3 such that the first entry corresponds to) Tj T* ET
Q
Q
q
1 0 0 1 20 231 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the wind speed, the second to the wind angle and the last to the boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 231 cm
Q
q
1 0 0 1 20 225 cm
Q
q
1 0 0 1 20 213 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If no ) Tj /F2 10 Tf (points) Tj /F1 10 Tf ( are passed, it will default to an empty array numpy.array\([]\)) Tj T* ET
Q
Q
q
1 0 0 1 20 213 cm
Q
q
1 0 0 1 20 207 cm
Q
q
1 0 0 1 20 195 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The parameter ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) specifies wether or not the wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 183 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (\(resp. wind angles\) given in ) Tj /F2 10 Tf (points) Tj /F1 10 Tf ( should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 183 cm
Q
q
1 0 0 1 20 177 cm
Q
q
1 0 0 1 20 153 cm
q
BT 1 0 0 1 0 14 Tm .646667 Tw 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (tws) Tj /F1 10 Tf ( \(resp. ) Tj /F2 10 Tf (twa) Tj /F1 10 Tf (\) is set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the wind speeds \(resp. wind angles\) will be converted into true) Tj T* 0 Tw (wind) Tj T* ET
Q
Q
q
1 0 0 1 20 153 cm
Q
q
1 0 0 1 20 147 cm
Q
q
1 0 0 1 20 135 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf ( class has to following \(private\) attributes:) Tj T* ET
Q
Q
q
1 0 0 1 20 135 cm
Q
q
1 0 0 1 20 129 cm
Q
q
1 0 0 1 20 111 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 111 cm
Q
q
1 0 0 1 20 105 cm
Q
q
1 0 0 1 20 93 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf ( class defines the following dunder methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 93 cm
Q
q
1 0 0 1 20 87 cm
Q
q
1 0 0 1 20 57 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__str__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (__repr__) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 57 cm
Q
q
1 0 0 1 20 51 cm
Q
q
1 0 0 1 20 39 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf ( class defines the following public methods:) Tj T* ET
Q
Q
q
1 0 0 1 20 39 cm
Q
q
1 0 0 1 20 33 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
148 0 obj
<<
/Length 8770
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 694.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all occuring wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 694.1575 cm
Q
q
1 0 0 1 20 676.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 670.1575 cm
Q
q
1 0 0 1 20 652.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all occuring wind angles) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 652.1575 cm
Q
q
1 0 0 1 20 634.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 628.1575 cm
Q
q
1 0 0 1 20 610.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_data) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 610.1575 cm
Q
q
1 0 0 1 20 592.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 586.1575 cm
Q
q
1 0 0 1 20 409.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to an existing .csv file or where the created .csv file will be located) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates or overwrites a .csv file with the class data of object) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (which called the function via the ) Tj /F2 10 Tf (csv) Tj /F1 10 Tf (.) Tj /F3 10 Tf (writer) Tj /F1 10 Tf (-class,) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (see ) Tj 0 0 .501961 rg (writer) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The format of the .csv file will be as follows:) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True Wind Speed ,True Wind Angle ,Boat Speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (with the delimiter ',') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 409.1575 cm
Q
q
1 0 0 1 20 391.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (add_points) Tj /F1 10 Tf (\() Tj /F2 10 Tf (new_points,) Tj ( ) Tj (tws=True,) Tj ( ) Tj (twa=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 385.1575 cm
Q
q
1 0 0 1 20 202.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 158 Tm  T* ET
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf ( of shape \(_, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New points that are to be added to the point cloud. The point should) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be of length 3, with the first entry being the wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the second being the wind angle and the last being the boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the wind speeds are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the given wind speeds will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (twa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not the wind angles are to be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If set to ) Tj /F4 10 Tf (False) Tj /F1 10 Tf (, the given wind angles will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 202.1575 cm
Q
q
1 0 0 1 20 184.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (change_points) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 178.1575 cm
Q
q
1 0 0 1 20 166.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 166.1575 cm
Q
q
1 0 0 1 20 148.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 142.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 124.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 111.1575 Tm  T* ET
q
1 0 0 1 20 109.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 103.1575 cm
Q
q
1 0 0 1 20 73.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 73.15748 cm
Q
q
1 0 0 1 20 55.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 49.15748 cm
Q
q
1 0 0 1 20 -4.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 15.11247 Tw 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a) Tj T* 0 Tw /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
149 0 obj
<<
/Length 8871
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 34.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 577.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 80 Tm  T* ET
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 577.1575 cm
Q
q
1 0 0 1 20 559.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 553.1575 cm
Q
q
1 0 0 1 20 304.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 194 Tm  T* ET
q
1 0 0 1 20 192 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (kwargs) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 304.1575 cm
Q
q
1 0 0 1 20 286.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (polar_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 268.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=Non) Tj (e,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 262.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 244.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 231.1575 Tm  T* ET
q
1 0 0 1 20 229.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 223.1575 cm
Q
q
1 0 0 1 20 193.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 193.1575 cm
Q
q
1 0 0 1 20 175.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 169.1575 cm
Q
q
1 0 0 1 20 115.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 115.1575 cm
Q
q
1 0 0 1 20 97.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 91.15748 cm
Q
q
1 0 0 1 20 1.15748 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
150 0 obj
<<
/Length 8930
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 34.9728 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 301.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 320 Tm  T* ET
q
1 0 0 1 20 306 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 306 cm
Q
q
1 0 0 1 20 288 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the amount of slices and colors.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( is of length 2 and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is of length) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (greater 2, the legend will be a) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( are of the same length,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the legend will be a ) Tj /F2 10 Tf (matplotlib.legend.) Tj /F3 10 Tf (Legend) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to change the appearence and location of the) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.) Tj /F3 10 Tf (legend) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded polar plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, vie the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 301.1575 cm
Q
q
1 0 0 1 20 283.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_range=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 265.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (legend_kw=Non) Tj (e,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 259.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 241.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 228.1575 Tm  T* ET
q
1 0 0 1 20 226.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 220.1575 cm
Q
q
1 0 0 1 20 190.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The range of wind speeds to be plotted, given as a lower and upper) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (bound of the true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 190.1575 cm
Q
q
1 0 0 1 20 172.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 166.1575 cm
Q
q
1 0 0 1 20 112.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 112.1575 cm
Q
q
1 0 0 1 20 94.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 88.15748 cm
Q
q
1 0 0 1 20 -1.84252 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different slices) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are at most as many slices as colors, each slice will be) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plotted with the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If there are more slices than colors the function will either cycle) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through the specified colors until all slices have been plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or if there are exactly two colors specified, the function will) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (plot the slices with a color gradient using those two colors) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
151 0 obj
<<
/Length 8557
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 52.9078 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 289.1575 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 320 Tm  T* ET
q
1 0 0 1 20 306 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Elements of the ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( can be of any type accepted by the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colors) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_rgb) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (to_rgb) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (colors) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 306 cm
Q
q
1 0 0 1 20 288 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 282 cm
Q
q
1 0 0 1 20 192 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the amount of slices and colors.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( is of length 2 and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( is of length) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (greater 2, the legend will be a) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (ws_range) Tj /F1 10 Tf ( are of the same length,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the legend will be a ) Tj /F2 10 Tf (matplotlib.legend.) Tj /F3 10 Tf (Legend) Tj /F1 10 Tf ( instance, see ) Tj 0 0 .501961 rg (Legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to change the appearence and location of the) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.) Tj /F3 10 Tf (legend) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (legend) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (However if no 'linestyle' \(resp. 'markerstyle'\) is passed) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (it will default to '' \(resp. 'o'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If 'colors' \(or 'c'\) is passed, it will be deleted. Use the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (parameters ) Tj /F2 10 Tf (colors) Tj /F1 10 Tf ( instead) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Creates a color coded cartesian plot of multiple slices, given by ) Tj /F2 10 Tf (wind_speed_range) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (of the polar diagram, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 289.1575 cm
Q
q
1 0 0 1 20 271.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj T* ET
Q
Q
q
1 0 0 1 20 253.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker=None,) Tj ( ) Tj (show_legend=True,) Tj ( ) Tj (**legend_kw) Tj /F1 10 Tf (\):) Tj T* ET
Q
Q
q
1 0 0 1 20 247.1575 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 225 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 212 Tm  T* ET
q
1 0 0 1 20 210 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 204 cm
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes._subplots.AxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyle) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the style of the markers in the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For all possible styles, see ) Tj 0 0 .501961 rg (marker) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to 'o') Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend should be added to the plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 14 Tm 4.579961 Tw 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.) Tj /F3 10 Tf (Colorbar) Tj /F1 10 Tf ( instance, see) Tj T* 0 Tw 0 0 .501961 rg (Colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
152 0 obj
<<
/Length 7481
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 273 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 50 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 14 Tm 1.37816 Tw 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence and position of the) Tj T* 0 Tw (legend) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F3 10 Tf (colorbar) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (colorbar) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
Q
Q
Q
q
1 0 0 1 20 273 cm
Q
q
1 0 0 1 20 255 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 249 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 237 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 170 Tm  T* ET
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 132 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A slice of the polar diagram that is to be plotted, given as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (true wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (A ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf ( instance on which will be plotted on) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Needs to be a ) Tj /F2 10 Tf (matplotlib.axes_subplots.PolarAxesSubplot) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, the function will create a ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (instance via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (gca) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (gca) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments to change the appearence of the created plot.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Supports the same keyword arguments as the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj /F1 10 Tf (-function) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram table, via the) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (scipy.spatial) Tj /F1 10 Tf (.) Tj /F3 10 Tf (ConvexHull) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (ConvexHull) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and then creates a polar plot of the convex hull, via the ) Tj /F2 10 Tf (matplotlib.pyplot) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (function, see ) Tj 0 0 .501961 rg (plot) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 222 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (WeightedPoints) Tj /F1 10 Tf (\() Tj /F2 10 Tf (points,) Tj ( ) Tj (w_func=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 204 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tws=True,) Tj ( ) Tj (twa=True,) Tj ( ) Tj (**w_func_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (WeightedPoints) Tj /F1 10 Tf ( class has to following \(private\) attributes:) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_points) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F4 10 Tf 12 TL (_weights) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F3 10 Tf (WeightedPoints) Tj /F1 10 Tf ( class defines the following public methods) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (WeightedPoints) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (WeightedPoints) Tj /F1 10 Tf (.) Tj /F4 10 Tf (_weights*) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F4 10 Tf (_weights) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing.data_processing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (default_w_func) Tj /F1 10 Tf (\() Tj /F2 10 Tf (points,) Tj ( ) Tj (**w_func_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
Q
Q
Q
q
Q
Q
Q
 
endstream
endobj
153 0 obj
<<
/Length 4031
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 432.0236 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 216 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 104 Tm  T* ET
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape \(n,3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (w_func_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The possible keyword arguments are) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (st_point \() Tj /F2 10 Tf (int) Tj /F1 10 Tf (\) -) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (outlier \() Tj /F2 10 Tf (float) Tj /F1 10 Tf (\) -) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The default w_func for the ) Tj /F3 10 Tf (WeightedPoints) Tj /F1 10 Tf ( class will give the) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Weight 1 to the first ) Tj /F2 10 Tf (st_point) Tj /F1 10 Tf ( Points.) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 168 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Then it will through the remaining points, calculating the) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (standard deviation of the wind speed, wind angle and boat speed of) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the ) Tj /F2 10 Tf (st_point) Tj /F1 10 Tf ( points that come before, using the) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (numpy) Tj /F1 10 Tf (.) Tj /F3 10 Tf (std) Tj /F1 10 Tf ( function, see ) Tj 0 0 .501961 rg (std) Tj  T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (It will then filter the occuring standard deviations by excluding) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (the outermost ) Tj /F2 10 Tf (outlier) Tj /F1 10 Tf ( percent, by computing the associated) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (empirical percentile.) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (After that, the function gives the wind speeds, wind angles and) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (boat speeds the weight 1/standardvariation^2, or 0 if they were) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (filtered out.) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The weight of the points will then be the arithmetic mean) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of their respective wind speed, wind angle and boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (At last the function will normalize the weights and return them.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
Q
q
1 0 0 1 62.69291 432.0236 cm
Q
 
endstream
endobj
154 0 obj
<<
/Nums [ 0 155 0 R 1 156 0 R 2 157 0 R 3 158 0 R 4 159 0 R 
  5 160 0 R 6 161 0 R 7 162 0 R 8 163 0 R 9 164 0 R 
  10 165 0 R 11 166 0 R 12 167 0 R 13 168 0 R 14 169 0 R 
  15 170 0 R 16 171 0 R 17 172 0 R 18 173 0 R 19 174 0 R 
  20 175 0 R 21 176 0 R ]
>>
endobj
155 0 obj
<<
/S /D /St 1
>>
endobj
156 0 obj
<<
/S /D /St 2
>>
endobj
157 0 obj
<<
/S /D /St 3
>>
endobj
158 0 obj
<<
/S /D /St 4
>>
endobj
159 0 obj
<<
/S /D /St 5
>>
endobj
160 0 obj
<<
/S /D /St 6
>>
endobj
161 0 obj
<<
/S /D /St 7
>>
endobj
162 0 obj
<<
/S /D /St 8
>>
endobj
163 0 obj
<<
/S /D /St 9
>>
endobj
164 0 obj
<<
/S /D /St 10
>>
endobj
165 0 obj
<<
/S /D /St 11
>>
endobj
166 0 obj
<<
/S /D /St 12
>>
endobj
167 0 obj
<<
/S /D /St 13
>>
endobj
168 0 obj
<<
/S /D /St 14
>>
endobj
169 0 obj
<<
/S /D /St 15
>>
endobj
170 0 obj
<<
/S /D /St 16
>>
endobj
171 0 obj
<<
/S /D /St 17
>>
endobj
172 0 obj
<<
/S /D /St 18
>>
endobj
173 0 obj
<<
/S /D /St 19
>>
endobj
174 0 obj
<<
/S /D /St 20
>>
endobj
175 0 obj
<<
/S /D /St 21
>>
endobj
176 0 obj
<<
/S /D /St 22
>>
endobj
xref
0 177
0000000000 65535 f 
0000000073 00000 n 
0000000135 00000 n 
0000000242 00000 n 
0000000347 00000 n 
0000000459 00000 n 
0000000629 00000 n 
0000000804 00000 n 
0000000990 00000 n 
0000001164 00000 n 
0000001407 00000 n 
0000001613 00000 n 
0000001805 00000 n 
0000002004 00000 n 
0000002214 00000 n 
0000002462 00000 n 
0000002578 00000 n 
0000002781 00000 n 
0000002984 00000 n 
0000003218 00000 n 
0000003455 00000 n 
0000003717 00000 n 
0000003951 00000 n 
0000004161 00000 n 
0000004388 00000 n 
0000004596 00000 n 
0000004802 00000 n 
0000005029 00000 n 
0000005250 00000 n 
0000005472 00000 n 
0000005693 00000 n 
0000005915 00000 n 
0000006163 00000 n 
0000006384 00000 n 
0000006633 00000 n 
0000006835 00000 n 
0000007068 00000 n 
0000007295 00000 n 
0000007550 00000 n 
0000007776 00000 n 
0000007998 00000 n 
0000008274 00000 n 
0000008495 00000 n 
0000008744 00000 n 
0000008946 00000 n 
0000009179 00000 n 
0000009406 00000 n 
0000009661 00000 n 
0000009887 00000 n 
0000010109 00000 n 
0000010385 00000 n 
0000010606 00000 n 
0000010835 00000 n 
0000011068 00000 n 
0000011294 00000 n 
0000011515 00000 n 
0000011750 00000 n 
0000011972 00000 n 
0000012241 00000 n 
0000012447 00000 n 
0000012674 00000 n 
0000012895 00000 n 
0000013117 00000 n 
0000013338 00000 n 
0000013560 00000 n 
0000013781 00000 n 
0000014036 00000 n 
0000014285 00000 n 
0000014487 00000 n 
0000014720 00000 n 
0000014947 00000 n 
0000015202 00000 n 
0000015428 00000 n 
0000015650 00000 n 
0000015871 00000 n 
0000016147 00000 n 
0000016396 00000 n 
0000016598 00000 n 
0000016831 00000 n 
0000017058 00000 n 
0000017313 00000 n 
0000017539 00000 n 
0000017761 00000 n 
0000017982 00000 n 
0000018258 00000 n 
0000018487 00000 n 
0000018720 00000 n 
0000018946 00000 n 
0000019167 00000 n 
0000019402 00000 n 
0000019624 00000 n 
0000019886 00000 n 
0000020092 00000 n 
0000020319 00000 n 
0000020540 00000 n 
0000020761 00000 n 
0000020983 00000 n 
0000021204 00000 n 
0000021452 00000 n 
0000021701 00000 n 
0000021903 00000 n 
0000022137 00000 n 
0000022365 00000 n 
0000022621 00000 n 
0000022848 00000 n 
0000023071 00000 n 
0000023293 00000 n 
0000023576 00000 n 
0000023826 00000 n 
0000024029 00000 n 
0000024263 00000 n 
0000024491 00000 n 
0000024747 00000 n 
0000024974 00000 n 
0000025197 00000 n 
0000025419 00000 n 
0000025649 00000 n 
0000025883 00000 n 
0000026184 00000 n 
0000026411 00000 n 
0000026633 00000 n 
0000026869 00000 n 
0000027092 00000 n 
0000027345 00000 n 
0000027562 00000 n 
0000027791 00000 n 
0000027901 00000 n 
0000028191 00000 n 
0000028268 00000 n 
0000028384 00000 n 
0000028524 00000 n 
0000028651 00000 n 
0000028870 00000 n 
0000037033 00000 n 
0000046853 00000 n 
0000054995 00000 n 
0000063578 00000 n 
0000072947 00000 n 
0000079408 00000 n 
0000087540 00000 n 
0000096407 00000 n 
0000105255 00000 n 
0000113933 00000 n 
0000122922 00000 n 
0000131979 00000 n 
0000140793 00000 n 
0000149752 00000 n 
0000158436 00000 n 
0000168608 00000 n 
0000177431 00000 n 
0000186355 00000 n 
0000195338 00000 n 
0000203948 00000 n 
0000211482 00000 n 
0000215566 00000 n 
0000215843 00000 n 
0000215878 00000 n 
0000215913 00000 n 
0000215948 00000 n 
0000215983 00000 n 
0000216018 00000 n 
0000216053 00000 n 
0000216088 00000 n 
0000216123 00000 n 
0000216158 00000 n 
0000216194 00000 n 
0000216230 00000 n 
0000216266 00000 n 
0000216302 00000 n 
0000216338 00000 n 
0000216374 00000 n 
0000216410 00000 n 
0000216446 00000 n 
0000216482 00000 n 
0000216518 00000 n 
0000216554 00000 n 
0000216590 00000 n 
trailer
<<
/ID 
[<3ade7643c49271eb3676545e24ffc66a><3ade7643c49271eb3676545e24ffc66a>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 126 0 R
/Root 125 0 R
/Size 177
>>
startxref
216626
%%EOF
